<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 16934048f79c6e117cd16a23c09c1b2ea502e284 Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: e4b889a3e8b9d87ab605aac9bbe85d2c16c69a1b Reviewer: samesch -->
<!-- CREDITS: tzwenny, betz -->
<sect1 xml:id="language.operators.execution">
 <title>Operator zur Programmausführung</title>
 <titleabbrev>Programmausführung</titleabbrev>
 <para>
  PHP unterstützt einen Operator für die Ausführung externer Programme: Die
  sog. Backticks (<literal>``</literal>). Achtung: Die Backticks sind keine
  einfachen Anführungszeichen! PHP versucht, den Text zwischen den Backticks
  als Kommandozeilen-Befehl auszuführen. Die Ausgabe des aufgerufenen Programms
  wird zurückgegeben (&dh; wird nicht einfach ausgegeben, sondern kann einer
  Variablen zugewiesen werden). Die Verwendung des Backtick-Operators ist mit
  <function>shell_exec</function> identisch.
  <example>
   <title>Backtick-Operator</title>
   <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$output = `ls -al`;
echo "<pre>$output</pre>";
?>
]]>
   </programlisting>
  </example>
 </para>
 <note>
  <para>
   Der Backtick-Operator steht nicht zur Verfügung, wenn die Funktion
   <function>shell_exec</function> deaktiviert wurde.
  </para>
 </note>
 <note>
  <para>
   Anders als bei einigen anderen Sprachen haben Backticks keine besondere
   Bedeutung, wenn sie in Zeichenketten, die in doppelten Anführungszeichen
   eingeschlossen sind, verwendet werden.
  </para>
 </note>

 <sect2 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ref.exec">Funktionen zur Programmausführung</link></member>
    <member><function>popen</function></member>
    <member><function>proc_open</function></member>
    <member><link linkend="features.commandline">Nutzung von PHP auf der Kommandozeile</link></member>
   </simplelist>
  </para>
 </sect2>
</sect1>
