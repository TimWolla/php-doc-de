<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 617b58b308d1f1916efaa4a3eb158fed251ae439 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration83.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Neue Features</title>

 <sect2 xml:id="migration83.new-features.core">
  <title>PHP-Kern</title>

  <sect3 xml:id="migration83.new-features.core.readonly-modifier-improvements">
   <title>Ergänzungen beim Schreibschutz (Readonly)</title>

   <para>
    Anonyme Klassen können nun als readonly markiert werden.
   </para>

   <para>
    Readonly-Eigenschaften können nun beim Klonen reinitialisiert werden.
    <!-- RFC: https://wiki.php.net/rfc/readonly_amendments -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.typed-class-constants">
   <title>Typisierte Klassenkonstanten</title>

   <para>
    Klassen-, Interface-, Trait- und Enum-Konstanten können nun typisiert
    deklariert werden.
    <!-- RFC: https://wiki.php.net/rfc/typed_class_constants -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.closures-created-from-magic-methods">
   <title>Von magischen Methoden erzeugte Closures</title>

   <para>
    Von magischen Methoden erzeugte Closures können nun benannte Argumente
    akzeptieren.
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.final-modifier-method-from-trait">
   <title>Der Modifikator final bei einer Methode aus einem Trait</title>

   <para>
    Wenn eine Methode aus einem Trait verwendet wird, kann sie nun als final
    gekennzeichnet werden.
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.override-attribute">
   <title>Das Attribut Override</title>

   <para>
    Das Attribut #[\Override] wurde hinzugefügt, damit überprüft wird, ob eine
    Methode in einer übergeordneten Klasse oder einer implementierten
    Schnittstelle existiert.
    <!-- RFC: https://wiki.php.net/rfc/marking_overriden_methods -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fetch-class-constant-dynamically-syntax">
   <title>Syntax für das dynamische Abrufen von Klassenkonstanten</title>

   <para>
    Mit der Syntax <code>C::{$name}</code> kann nun dynamisch auf
    Klassenkonstanten zugegriffen werden.
    <!-- RFC: https://wiki.php.net/rfc/dynamic_class_constant_fetch -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.static-variable-initializers">
   <title>Initialisierung statischer Variablen</title>

   <para>
    Für die Initialisierung statischer Variablen können nun beliebige Ausdrücke
    verwendet werden.
    <!-- RFC: RFC: https://wiki.php.net/rfc/arbitrary_static_variable_initializers -->
   </para>
  </sect3>

  <sect3 xml:id="migration83.new-features.core.fallback-value-syntax-for-php-ini">
   <title>Syntax für Fallback-Werte bei ini-Variablen</title>

   <para>
    In der php.ini wird nun die Syntax für Fallback-/Standardwerte unterstützt.
    <!-- refs: https://github.com/php/php-src/pull/11351 -->
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
/*
Angenommen, die Datei /pfad/zu/user.ini enthält die folgenden Einstellungen:

listen = localhost:${DRUPAL_FPM_PORT:-9000}
*/

$user_ini = parse_ini_file('/pfad/zu/user.ini');
echo $user_ini['listen']; // localhost:9000
]]>
     </programlisting>
    </informalexample>

   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration83.new-features.cli">
  <title>CLI</title>

  <para>
   Die Überprüfung der Syntax (Lint) kann nun bei mehreren Dateien
   gleichzeitig durchgeführt werden.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.dom">
  <title>DOM</title>

  <para>
   Die Eigenschaften <property>DOMElement::$className</property> und
   <property>DOMElement::$id</property> wurden hinzugefügt. Diese sind im
   Moment wegen der Einschränkungen der zugrundeliegenden libxml2 nicht
   binärsicher. Das bedeutet, dass die Werte der Eigenschaften an einem
   NUL-Byte abgeschnitten werden.
  </para>

  <para>
   Die Eigenschaften <property>DOMNode::$isConnected</property> und
   <property>DOMNameSpaceNode::$isConnected</property> wurden hinzugefügt.
  </para>

  <para>
   Die Eigenschaften <property>DOMNode::$parentElement</property> und
   <property>DOMNameSpaceNode::$parentElement</property> wurden hinzugefügt.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.ffi">
  <title>FFI</title>

  <para>
   Es ist nun möglich, <classname>FFI\CData</classname> anderen FFI\CData
   zuzuweisen. Das bedeutet, dass CData nun Strukturen und Feldern zugewiesen
   werden kann.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.opcache">
  <title>Opcache</title>

  <para>
   <code>opcache_get_status()['scripts'][n]['revalidate']</code> enthält nun
   einen Unix-Zeitstempel, der angibt, wann das Skript das nächste Mal
   revalidiert werden muss. Dies wird durch die INI-Direktive
   <link linkend="ini.opcache.revalidate-freq">opcache.revalidate_freq</link>
   festgelegt.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.posix">
  <title>POSIX</title>

  <para>
   <function>posix_getrlimit</function> akzeptiert nun einen optionalen
   <parameter>$resource</parameter>-Parameter, um ein einzelnes Ressourcenlimit
   abrufen zu können.
  </para>

  <para>
   <function>posix_isatty</function> folgt nun der normalen Semantik der
   Parameterauswertung (ZPP) und gibt eine Typ-Warnung für Integer-Werte aus.
  </para>

  <para>
   <function>posix_ttyname</function> folgt nun der normalen Semantik der
   Parameterauswertung (ZPP) und gibt eine Typ-Warnung für Integer-Werte aus.
   Darüber hinaus wird nun für Integer-Werte ungültiger Dateideskriptoren eine
   Wert-Warnung ausgegeben.
  </para>
 </sect2>

 <sect2 xml:id="migration83.new-features.streams">
  <title>Streams</title>

  <para>
   Streams können nun die Benachrichtigung
   <constant>STREAM_NOTIFY_COMPLETED</constant> senden. Dies war bisher nicht
   implementiert.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
