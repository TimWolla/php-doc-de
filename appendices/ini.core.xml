<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 90787fda14dcb0976a9738423e6c6013c037d048 Maintainer: nikic Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 8a04690ab3ca341df750d00b32f27df5debbc307 Reviewer: samesch -->

<section xml:id="ini.core" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Beschreibung der &php.ini;-Direktiven des Sprachkerns</title>
 <para>
  Diese Liste enthält die &php.ini;-Direktiven des PHP-Kerns, die Sie in Ihrer
  Installation verwenden können. Direktiven, die von einer der Erweiterungen
  verarbeitet werden, werden in den Handbuchseiten der jeweiligen Erweiterung
  aufgelistet und im Detail beschrieben. So können &zb; die Direktiven zur
  Konfiguration von Sessions auf den
  <link linkend="session.configuration">Session-Handbuchseiten</link>
  gefunden werden.
 </para>
 <note>
  <para>
   Die Voreinstellungen, die hier aufgeführt werden, gelten, wenn &php.ini;
   nicht geladen wurde. Die Werte für die Produktions- und
   Entwicklungs-&php.ini; können unterschiedlich sein.
  </para>
 </note>
 <section xml:id="ini.sect.language-options">
  <title>Sprachoptionen</title>
  <para>
   <table>
    <title>Konfiguration der Sprache und verschiedene weitere Optionen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.short-open-tag">short_open_tag</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.precision">precision</link></entry>
       <entry>"14"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.serialize-precision">serialize_precision</link></entry>
       <entry>"-1"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry>Vor PHP 7.1.0 war der Vorgabewert 17.</entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-functions">disable_functions</link></entry>
       <entry>""</entry>
       <entry>Nur <constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-classes">disable_classes</link></entry>
       <entry>""</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.exit-on-timeout">exit_on_timeout</link></entry>
       <entry>""</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.expose-php">expose_php</link></entry>
       <entry>"1"</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.hard-timeout">hard_timeout</link></entry>
       <entry>"2"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry>Verfügbar seit PHP 7.1.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.exception-ignore-args">zend.exception_ignore_args</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry>Verfügbar seit PHP 7.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.multibyte">zend.multibyte</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.script-encoding">zend.script_encoding</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.detect-unicode">zend.detect_unicode</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.signal-check">zend.signal_check</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.assertions">zend.assertions</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_ALL</constant> mit Einschränkungen</entry>
       <entry></entry>
      </row>
       <row>
        <entry><link linkend="ini.zend.exception-string-param-max-len">zend.exception_string_param_max_len</link></entry>
        <entry>"15"</entry>
        <entry><constant>INI_ALL</constant></entry>
        <entry>Verfügbar seit PHP 8.0.0.</entry>
       </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.short-open-tag">
     <term>
      <parameter>short_open_tag</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob die Kurzform (<userinput>&lt;? ?&gt;</userinput>) des
       PHP-Öffnungs-Tags erlaubt werden soll. Wenn Sie PHP in Kombination mit
       XML verwenden wollen, können Sie diese Option deaktivieren, um
       <userinput>&lt;?xml ?&gt;</userinput> verwenden zu können. Andernfalls
       können Sie das Tag mit PHP ausgeben, &zb; <userinput>&lt;?php echo
       '&lt;?xml version="1.0"'; ?&gt;</userinput>. Wenn diese Option
       deaktiviert ist, müssen Sie die Langform des PHP-Öffnungs-Tags
       (<userinput>&lt;?php ?&gt;</userinput>) verwenden.
      </para>
      <note>
       <para>
        Diese Option hat keinen Einfluss auf die Kurzform
        <userinput>&lt;?=</userinput>, die immer verfügbar ist.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.precision">
     <term>
      <parameter>precision</parameter>
      <type>int</type>
     </term>
     <listitem>
      <simpara>
       Die Anzahl der signifikanten Stellen, die in Gleitkommazahlen
       dargestellt werden. <literal>-1</literal> bedeutet, dass ein
       verbesserter Algorithmus zur Rundung solcher Zahlen verwendet wird.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.serialize-precision">
     <term>
      <parameter>serialize_precision</parameter>
      <type>int</type>
     </term>
     <listitem>
      <simpara>
       Die Anzahl der signifikanten Stellen, die gespeichert werden, wenn
       Gleitkommazahlen serialisiert werden. <literal>-1</literal> bedeutet,
       dass ein verbesserter Algorithmus zur Rundung solcher Zahlen verwendet
       wird.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.expose-php">
     <term>
      <parameter>expose_php</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Zeigt der Welt, dass PHP auf dem Server installiert ist. Dies
       beinhaltet die Version von PHP im HTTP-Header (&zb; X-Powered-By:
       PHP/5.3.7).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.disable-functions">
     <term>
      <parameter>disable_functions</parameter>
      <type>string</type>
     </term>
     <listitem>
      <simpara>
       Diese Direktive ermöglicht das Deaktivieren einzelner Funktionen. Die
       Funktionen werden als kommagetrennte Liste von Funktionsnamen
       übergeben. Seit PHP 8.0.0 wird durch das Deaktivieren einer Funktion
       deren Definition aufgehoben, sodass sie auf Benutzerebene neu definiert
       werden kann. Vor PHP 8.0.0 hat das Deaktivieren einer Funktion nur dazu
       geführt, dass die Funktion nicht mehr aufgerufen werden konnte.
      </simpara>
      <simpara>
       Nur <link linkend="functions.internal">interne Funktionen</link>
       können über diese Option deaktiviert werden.
       <link linkend="functions.user-defined">Benutzerdefinierte Funktionen</link>
       sind nicht betroffen.
      </simpara>
      <simpara>
       Diese Direktive muss in der &php.ini; gesetzt werden. Sie kann nicht in
       der &httpd.conf; gesetzt werden.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.disable-classes">
     <term>
      <parameter>disable_classes</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Direktive ermöglicht das Deaktivieren einzelner Klassen. Die
       Klassen werden als kommagetrennte Liste von Klassennamen übergeben.
       Durch das Deaktivieren einer Klasse wird lediglich die Instanziierung
       der Klasse verhindert.
      </para>
      <para>
       Mit dieser Direktive können nur interne Klassen deaktiviert werden.
       Benutzerdefinierte Klassen sind hiervon nicht betroffen.
      </para>
      <simpara>
      </simpara>
      <simpara>
       Diese Direktive muss der in &php.ini; gesetzt werden. Sie kann
       beispielsweise nicht der in &httpd.conf; gesetzt werden.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.assertions">
     <term>
      <parameter>zend.assertions</parameter>
      <type>int</type>
     </term>
     <listitem>
      <simpara>
       Falls diese Direktive auf <literal>1</literal> gesetzt ist, dann wird
       Assertion-Code erzeugt und ausgeführt (Entwicklungsmodus). Falls sie
       auf <literal>0</literal> gesetzt ist, dann wird Assertion-Code erzeugt,
       aber zur Laufzeit ausgelassen (nicht ausgeführt). Falls sie auf
       <literal>-1</literal> gesetzt ist, dann wird Assertion-Code nicht
       erzeugt, so dass die Assertions keine Laufzeitkosten haben
       (Produktionsmodus).
      </simpara>
      <note>
       <para>
        Wurde der Prozess im Produktionsmodus gestartet, kann
        <link linkend="ini.zend.assertions">zend.assertions</link> nicht zur
        Laufzeit geändert werden, da der Assertion-Code nicht erzeugt wurde.
       </para>
       <para>
        Wurde der Prozess im Entwicklungsmodus gestartet, kann
        <link linkend="ini.zend.assertions">zend.assertions</link> zur
        Laufzeit nicht auf <literal>-1</literal> gesetzt werden.
       </para>
      </note>
     </listitem>
    </varlistentry>

     <varlistentry xml:id="ini.zend.exception-string-param-max-len">
      <term>
       <parameter>zend.exception_string_param_max_len</parameter>
       <type>int</type>
      </term>
      <listitem>
       <simpara>
        Die maximale Länge von String-Funktionsparametern in stringifizierten
        Stacktraces; muss zwischen <literal>"0"</literal> und
        <literal>"1000000"</literal> liegen.
       </simpara>
      </listitem>
     </varlistentry>

    <varlistentry xml:id="ini.hard-timeout">
     <term>
      <parameter>hard_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Wenn der in
       <link linkend="ini.max-execution-time">max_execution_time</link>
       eingestellte Timeout erreicht wurde, baut die PHP-Laufzeitumgebung die
       Ressourcen geordnet ab. Wird dabei etwas blockiert, läuft der harte
       Timeout für die eingestellte Anzahl von Sekunden. Wenn der harte
       Timeout erreicht ist, wird PHP unvorschriftsmäßig beendet. Bei einem
       Wert von 0 wird der harte Timeout nie aktiviert.
      </para>
      <para>
       Wenn PHP nach einem harten Timeout beendet wird, sieht das in etwa so
       aus:
       <screen>
<![CDATA[
Fatal error: Maximum execution time of 30+2 seconds exceeded (terminated) in Unknown on line 0
]]>
        </screen>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.exception-ignore-args">
     <term>
      <parameter>zend.exception_ignore_args</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Schließt Argumente aus Stacktraces, die von Exceptions generiert
       wurden, aus.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.multibyte">
     <term>
      <parameter>zend.multibyte</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Erlaubt das Parsen von Quellcode-Dateien in Multibyte-Kodierungen. Die
       Aktivierung von zend.multibyte ist erforderlich, um Zeichenkodierungen
       wie SJIS, BIG5, usw. zu verwenden, die besondere Zeichen in
       multibyte-Zeichenkettendaten enthalten. ISO-8859-1-kompatible
       Kodierungen wie UTF-8, EUC usw. erfordern diese Option nicht.
      </para>
      <para>
       Das Aktivieren von zend.multibyte erfordert, dass die
       mbstring-Erweiterung verfügbar ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.script-encoding">
     <term>
      <parameter>zend.script_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Dieser Wert wird verwendet, sofern am Anfang des Skripts keine
       <link linkend="control-structures.declare.encoding">declare(encoding=...)</link>-Direktive
       verwendet wird. Wird eine ISO-8859-1-inkompatible Kodierung verwendet,
       müssen sowohl zend.multibyte als auch zend.script_encoding verwendet
       werden.
      </para>
      <para>
       Zeichenkettenliterale werden von zend.script_encoding in
       mbstring.internal_encoding übersetzt, als ob
       <function>mb_convert_encoding</function> aufgerufen worden wäre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.detect-unicode">
     <term>
      <parameter>zend.detect_unicode</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Erkenne, ob eine BOM (Byte Order Mark) vorhanden ist und prüfe, ob die
       Datei valide Multibyte-Zeichen enthält. Diese Erkennung wird
       vorgenommen, bevor <function>__halt_compiler</function> verarbeitet
       wird. Diese Option ist nur im Zend-Multibyte-Modus verfügbar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend.signal-check">
     <term>
      <parameter>zend.signal_check</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Legt fest, ob während des Herunterfahrens geprüft werden soll, ob
       Signal-Handler ersetzt wurden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.exit-on-timeout">
     <term>
      <parameter>exit_on_timeout</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung betrifft nur Apache1 mit mod_php. Sie zwingt einen
       Apache-Kindprozess, sich zu beenden, wenn ein PHP-Timeout auftritt.
       Solch ein Timeout verursacht einen internen longjmp()-Aufruf, welches
       einige Erweiterungen in einem inkonsistenten Zustand hinterlassen kann.
       Durch das Beenden des Prozesses werden ausstehende Locks und
       allozierter Arbeitsspeicher freigegeben.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.resource-limits">
  <title>Limitierung von Ressourcen</title>
  <para>
   <table>
    <title>Limitierung von Ressourcen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.memory-limit">memory_limit</link></entry>
       <entry>"128M"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.memory-limit">
     <term>
      <parameter>memory_limit</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Legt die maximale Menge an Speicher in Bytes fest, die ein Skript
       verbrauchen darf. Damit können schlecht geschriebene Skripte daran
       gehindert werden, den gesamten verfügbaren Speicher eines Servers
       "aufzufressen". Um keine Speicherobergrenze festzulegen, setzen Sie
       diese Direktive auf den Wert <literal>-1</literal>.
      </para>

      &ini.shorthandbytes;

     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   Siehe auch
   <link linkend="ini.max-execution-time">max_execution_time</link>.
  </para>
 </section>

 <section xml:id="ini.sect.performance">
  <title>Leistungsoptimierung</title>
  <para>
   <table>
    <title>Leistungsoptimierung</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.realpath-cache-size">realpath_cache_size</link></entry>
       <entry>"4M"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry>
        Vor PHP 7.0.16 and 7.1.2 war die Voreinstellung
        <literal>"16K"</literal>
       </entry>
      </row>
      <row>
       <entry><link linkend="ini.realpath-cache-ttl">realpath_cache_ttl</link></entry>
       <entry>"120"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <note>
    <para>
     Die Verwendung von <link linkend="ini.open-basedir">open_basedir</link>
     <emphasis>deaktiviert</emphasis> den realpath-Cache.
    </para>
   </note>
  </para>
  &ini.descriptions.title;
  <para>
   <variablelist>
    <varlistentry xml:id="ini.realpath-cache-size">
     <term>
      <parameter>realpath_cache_size</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Legt die Größe des von PHP nutzbaren realpath-Caches fest. Dieser Wert
       sollte auf Systemen erhöht werden, auf denen PHP viele Dateien öffnet,
       um die Anzahl von Dateioperationen widerzuspiegeln.
      </para>
      <para>
       Die Größe stellt die Gesamtzahl von Bytes der gespeicherten
       Pfad-Zeichenketten dar, plus die Größe der Daten, die mit dem
       Cache-Eintrag verknüpft sind. Das bedeutet, dass der Cache größer sein
       muss, um längere Pfade im Cache zu speichern. Dieser Wert steuert nicht
       direkt die Anzahl der individuellen Pfade, die im Cache vorgehalten
       werden können.
      </para>
      <para>
       Die benötigte Größe für die Cache-Eintragsdaten ist systemabhängig.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.realpath-cache-ttl">
     <term>
      <parameter>realpath_cache_ttl</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Zeitspanne (in Sekunden), während der realpath-Informationen einer
       Datei oder eines Verzeichnisses gecacht bleiben. Für Systeme, auf denen
       sich die Dateien kaum ändern, sollte man die Erhöhung dieses Wertes in
       Betracht ziehen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.data-handling">
  <title>Verarbeitung von Daten</title>
  <para>
   <table>
    <title>Konfigurationsoptionen für die Verarbeitung von Daten</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.arg-separator.output">arg_separator.output</link></entry>
       <entry>"&amp;"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.arg-separator.input">arg_separator.input</link></entry>
       <entry>"&amp;"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.variables-order">variables_order</link></entry>
       <entry>"EGPCS"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.request-order">request_order</link></entry>
       <entry>""</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-globals-jit">auto_globals_jit</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.register-argc-argv">register_argc_argv</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.enable-post-data-reading">enable_post_data_reading</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.post-max-size">post_max_size</link></entry>
       <entry>"8M"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-prepend-file">auto_prepend_file</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-append-file">auto_append_file</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.default-mimetype">default_mimetype</link></entry>
       <entry>"text/html"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.default-charset">default_charset</link></entry>
       <entry>"UTF-8"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.input-encoding">input_encoding</link></entry>
       <entry>""</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.output-encoding">output_encoding</link></entry>
       <entry>""</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.internal-encoding">internal_encoding</link></entry>
       <entry>""</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.arg-separator.output">
     <term>
      <parameter>arg_separator.output</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Das Trennzeichen, das in von PHP generierten URLs verwendet wird, um
       Argumente abzutrennen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.arg-separator.input">
     <term>
      <parameter>arg_separator.input</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Liste der Trennzeichen, die von PHP beim Parsen von URLs zu Variablen
       verwendet werden.
      </para>
      <note>
       <para>
        Jeder Buchstabe in dieser Option wird als Trennzeichen interpretiert!
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.variables-order">
     <term>
      <parameter>variables_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Legt die Reihenfolge der EGPCS- (<literal>E</literal>nvironment
       (Umgebungsvariablen), <literal>G</literal>et, <literal>P</literal>ost,
       <literal>C</literal>ookie und <literal>S</literal>erver)
       Variablenverarbeitung fest. Wenn zum Beispiel variables_order auf
       <literal>"SP"</literal> eingestellt ist, wird PHP die
       &link.superglobals; <varname>$_SERVER</varname> und
       <varname>$_POST</varname>, nicht aber <varname>$_ENV</varname>,
       <varname>$_GET</varname> und <varname>$_COOKIE</varname> anlegen. Wird
       dieser Wert auf "" gesetzt, so werden keine &link.superglobals;
       erzeugt.
      </para>
      <warning>
       <para>
        Sowohl im CGI- als auch im FastCGI-SAPI enthält
        <varname>$_SERVER</varname> immer auch Variablen aus dem Environment;
        <literal>S</literal> ist hier immer äquivalent zu
        <literal>ES</literal>, unabhängig davon, ob <literal>E</literal> noch
        anderweitig in der Direktive verwendet wird.
       </para>
      </warning>
      <note>
       <para>
        Der Inhalt und die Reihenfolge von <varname>$_REQUEST</varname> sind
        von dieser Direktive ebenfalls betroffen.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.request-order">
     <term>
      <parameter>request_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Direktive legt fest, in welcher Reihenfolge PHP GET-, POST- und
       Cookie-Variablen im _REQUEST-Array ablegt. Die Registrierung erfolgt
       dabei von links nach rechts und neuere Einträge überschreiben bisherige
       Werte gleichen Namens.
      </para>
      <para>
       Ist diese Direktive nicht gesetzt, so wird stattdessen
       <link linkend="ini.variables-order">variables_order</link> für die
       Inhalte von <varname>$_REQUEST</varname> ausgewertet.
      </para>
      <para>
       Beachten Sie, dass die Standard-<filename>php.ini</filename>-Dateien
       <literal>'C'</literal> für Cookies aus Sicherheitsgründen nicht
       angeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.auto-globals-jit">
     <term>
      <parameter>auto_globals_jit</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Wenn eingeschaltet, werden die SERVER-, REQUEST- und ENV-Variablen
       erzeugt, sobald diese zum ersten Mal verwendet werden (Just In Time),
       statt zum Ausführungsbeginn des Skriptes. Wenn diese Variablen in einem
       Skript nicht verwendet werden, bringt das Einschalten dieser
       Einstellung einen Geschwindigkeitszuwachs.
      </para>
      <warning>
       <para>
        Ob SERVER-, REQUEST- und ENV-Variablen verwendet werden, wird bereits
        zur Kompilationszeit geprüft. Ein Zugriff über
        <link linkend="language.variables.variable">variable Variablen</link>
        führt daher nicht dazu, dass diese initialisiert werden.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.register-argc-argv">
     <term>
      <parameter>register_argc_argv</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <simpara>
       Bestimmt, ob die argv- &amp; argc-Variablen deklariert werden sollen
       (betrifft die GET-Informationen).
      </simpara>
      <simpara>
       Siehe auch <link linkend="features.commandline">Kommandozeile</link>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.enable-post-data-reading">
     <term>
      <parameter>enable_post_data_reading</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <simpara>
       Wenn diese Option deaktiviert ist, werden <varname>$_POST</varname> und
       <varname>$_FILES</varname> <emphasis>nicht</emphasis> gefüllt. Der
       einzige Weg, in diesem Fall die POST-Daten zu lesen, ist der
       <link linkend="wrappers.php">php://input</link>-Stream-Wrapper. Dies
       kann nützlich sein, um Requests umzuleiten oder um die POST-Daten
       speichereffizient zu verarbeiten.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.post-max-size">
     <term>
      <parameter>post_max_size</parameter>
      <type>int</type>
     </term>
     <listitem>
      <simpara>
       Setzt die maximal erlaubte Größe von POST-Daten. Diese Option betrifft
       auch den Datei-Upload. Um größere Dateien hochzuladen, muss der Wert
       größer sein als
       <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
      </simpara>
      <simpara>
       Allgemein sollte <link linkend="ini.memory-limit">memory_limit</link>
       größer als <parameter>post_max_size</parameter> sein.
      </simpara>

      &ini.shorthandbytes;

      <simpara>
       Wenn die Größe der POST-Daten größer ist als post_max_size, werden die
       <varname>$_POST</varname>- und
       <varname>$_FILES</varname>-<link linkend="language.variables.superglobals">Superglobals</link>
       leer sein. Dies kann auf verschiedene Weisen verfolgt werden, &zb;
       indem man die <varname>$_GET</varname>-Variable an das Skript, das die
       Daten verarbeitet, weitergibt, &dh; <literal>&lt;form
       action="edit.php?processed=1"&gt;</literal> und daraufhin prüft, ob
       <varname>$_GET['processed']</varname> gesetzt ist.
      </simpara>
      <para>
       <note>
        <para>
         PHP gestattet die Angabe von K für kilo, M für mega und G für Giga
         bei der Angabe von Werten und rechnet diese automatisch um. Vermeiden
         Sie aber beim Einsatz von 32bit-Versionen die Angabe von Werten, die
         das Limit für vorzeichenbehaftete 32bit-Integer überschreiten, da
         Ihre Skripte sonst fehlschlagen werden.
        </para>
       </note>
      </para>
      <para>
       <table>
        <title>Changelog für <literal>post_max_size</literal></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Version;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>5.3.4</entry>
           <entry>
            <parameter>post_max_size</parameter> = 0 deaktiviert die
            Begrenzung nicht, wenn der Content-Type
            application/x-www-form-urlencoded oder PHP nicht bekannt ist.
           </entry>
          </row>
          <row>
           <entry>5.3.2, 5.2.12</entry>
           <entry>
            Erlaubt unbegrenzte POST-Größe durch Setzen von
            <parameter>post_max_size</parameter> auf 0.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.auto-prepend-file">
     <term>
      <parameter>auto_prepend_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Datei angeben, die automatisch vor der Hauptdatei
       aufgerufen wird. Die Datei wird in die aufgerufene Datei eingebettet,
       als wenn Sie sie mittels der Funktion <function>require</function>
       eingebunden hätten, dabei wird ein gesetzter
       <link linkend="ini.include-path">include_path</link> beachtet.
      </para>
      <para>
       Der spezielle Wert <literal>none</literal> deaktiviert Auto-Prepending.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.auto-append-file">
     <term>
      <parameter>auto_append_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Datei angeben, die automatisch nach der Hauptdatei
       aufgerufen wird. Die Datei wird in die aufgerufene Datei eingebettet,
       als wenn Sie sie mittels der Funktion <function>require</function>
       eingebunden hätten, dabei wird ein gesetzter
       <link linkend="ini.include-path">include_path</link> beachtet.
      </para>
      <para>
       Der spezielle Wert <literal>none</literal> deaktiviert Auto-Appending.
       <note>
        <simpara>
         Wird das Skript mit der Funktion <function>exit</function> beendet,
         dann wird Auto-Appending <emphasis>nicht</emphasis> aktiv.
        </simpara>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.default-mimetype">
     <term>
      <parameter>default_mimetype</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Standardmäßig gibt PHP den Medientyp unter Verwendung des
       Content-Type-Headers aus. Um das zu unterbinden, ist diese Einstellung
       leer zu lassen.
      </para>
      <para>
       PHP's eingebauter Medientyp ist text/html.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.default-charset">
     <term>
      <parameter>default_charset</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       "UTF-8" ist der Vorgabewert und dieser Wert wird als
       Standard-Zeichenkodierung für <function>htmlentities</function>,
       <function>html_entity_decode</function> und
       <function>htmlspecialchars</function> verwendet, wenn der Parameter
       <parameter>encoding</parameter> ausgelassen wird. Der Wert von
       <parameter>default_charset</parameter> wird ebenfalls verwendet, um den
       Standard-Zeichensatz für
       <link linkend="book.iconv">iconv</link>-Funktionen festzulegen, wenn
       die
       <link linkend="ini.iconv.input-encoding"><parameter>iconv.input_encoding</parameter></link>-,
       <link linkend="ini.iconv.output-encoding"><parameter>iconv.output_encoding</parameter></link>-
       und
       <link linkend="ini.iconv.internal-encoding"><parameter>iconv.internal_encoding</parameter></link>-Konfigurationsoptionen
       nicht gesetzt sind, und für
       <link linkend="book.mbstring">mbstring</link>-Funktionen, wenn die
       <link linkend="ini.mbstring.http-input"><parameter>mbstring.http_input</parameter></link>-,
       <link linkend="ini.mbstring.http-output"><parameter>mbstring.http_output</parameter></link>-
       und
       <link linkend="ini.mbstring.internal-encoding"><parameter>mbstring.internal_encoding</parameter></link>-Konfigurationsoptionen
       nicht gesetzt sind.
      </para>
      <para>
       Alle Versionen von PHP verwenden diesen Wert als Zeichensatz im
       Standard-Content-Type-Header, der von PHP gesendet wird, wenn der
       Header nicht durch einen Aufruf von <function>header</function>
       überschrieben wurde.
      </para>
      <para>
       <parameter>default_charset</parameter> auf einen leeren Wert zu setzen,
       wird nicht empfohlen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.input-encoding">
     <term>
      <parameter>input_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung wird für Multibyte-Module wie mbstring und iconv
       verwenden. Standardwert ist leer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.output-encoding">
     <term>
      <parameter>output_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung wird für Multibyte-Module wie mbstring und iconv
       verwenden. Standardwert ist leer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.internal-encoding">
     <term>
      <parameter>internal_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung wird für Multibyte-Module wie mbstring und iconv
       verwenden. Standardwert ist leer. Falls leer, dann wird
       <link linkend="ini.default-charset">default_charset</link> verwendet.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.path-directory">
  <title>Pfade und Verzeichnisse</title>
  <para>
   <table>
    <title>Konfigurationsoptionen für Pfade und Verzeichnisse</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.include-path">include_path</link></entry>
       <entry>".;/path/to/php/pear"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.open-basedir">open_basedir</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.doc-root">doc_root</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.user-dir">user_dir</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.user-ini.cache-ttl">user_ini.cache_ttl</link></entry>
       <entry>"300"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.user-ini.filename">user_ini.filename</link></entry>
       <entry>".user.ini"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension-dir">extension_dir</link></entry>
       <entry>"/path/to/php"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension">extension</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension">zend_extension</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.check-shebang-line">cgi.check_shebang_line</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.discard-path">cgi.discard_path</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.force-redirect">cgi.force_redirect</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.nph">cgi.nph</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.impersonate">fastcgi.impersonate</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.logging">fastcgi.logging</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.include-path">
     <term>
      <parameter>include_path</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Liste von Verzeichnissen angeben, in welchen die
       Funktionen <function>require</function>, <function>include</function>,
       <function>fopen</function>, <function>file</function>,
       <function>readfile</function> und
       <function>file_get_contents</function> nach Dateien suchen. Das Format
       ist ähnlich zur <envar>PATH</envar>-Umgebungsvariablen des jeweiligen
       Systems: Eine Liste von Verzeichnissen, getrennt durch einen
       Doppelpunkt unter Unix oder ein Semikolon unter Windows.
      </para>
      <para>
       Wenn PHP eine Datei einbinden soll, geht es alle Einträge im
       Include-Pfad einzeln durch. Zuerst wird der erste Pfad getestet und
       wenn die Datei dort nicht gefunden wird, wird der nächste Pfad
       überprüft, bis letztendlich entweder die Datei gefunden wird oder aber
       PHP ein <constant>E_WARNING</constant> oder
       <constant>E_ERROR</constant> zurückgibt. Der Include-Pfad kann auch zur
       Laufzeit mit Hilfe der Funktion <function>set_include_path</function>
       geändert werden.
      </para>
      <para>
       <example>
        <title>include_path unter Unix</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       <example>
        <title>include_path unter Windows</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       Ein <literal>.</literal> in dieser Option ermöglicht, Dateien relativ
       zum aktuellen Verzeichnis einzubinden. Es ist jedoch effizienter,
       explizit <literal>include './Datei'</literal> zu schreiben, anstatt PHP
       zu zwingen jedes Mal den Include-Pfad zu nutzen.
      </para>
       <note>
        <para>
         Auf <literal>ENV</literal>-Variablen kann in .ini-Dateien ebenfalls
         zugegriffen werden. Daher ist es möglich, das Home-Verzeichnis durch
         <literal>${LOGIN}</literal> und <literal>${USER}</literal> zu
         referenzieren.
        </para>
        <para>
         Umgebungsvariablen können zwischen verschiedenen Server-APIs
         variieren, da diese Umgebungen unterschiedlich sein können.
        </para>
       </note>
       <para>
        <example>
         <title>include_path unter Unix unter Verwendung der ${USER}-Umgebungsvariablen</title>
         <programlisting role="php.ini">
<![CDATA[
include_path = ".:${USER}/pear/php"
]]>
         </programlisting>
        </example>
       </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.open-basedir">
     <term>
      <parameter>open_basedir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Begrenzt die Dateien, auf die von PHP zugegriffen werden kann, auf
       einen bestimmten Ordner inklusive seiner Unterordner.
      </para>
      <para>
       Wenn ein Skript versucht, auf eine Datei zuzugreifen, zum Beispiel mit
       <function>include</function> oder <function>fopen</function>, wird der
       Ort der Datei geprüft. Wenn die Datei nicht im Verzeichnisbaum liegt,
       der in open_basedir angegeben ist, wird PHP nicht auf die Datei
       zugreifen. Alle symbolischen Verknüpfungen werden aufgelöst, sodass es
       nicht möglich ist, diese Beschränkung mit einem Symlink zu umgehen.
       Wenn die Datei nicht existiert, kann die Verknüpfung nicht aufgelöst
       werden und der Dateiname wird mit (einem aufgelösten)
       <option>open_basedir</option> verglichen.
      </para>
      <para>
       <option>open_basedir</option> kann sich auf mehr als nur
       Dateisystemfunktionen auswirken. Wenn zum Beispiel
       <literal>MySQL</literal> so konfiguriert ist, dass es den
       <literal>mysqlnd</literal>-Treiber verwendet, wird <literal>LOAD DATA
       INFILE</literal> von <option>open_basedir</option> beeinflusst. Ein
       Großteil der erweiterten Funktionalität von PHP verwendet
       <literal>open_basedir</literal> auf diese Weise.
      </para>
      <para>
       Der spezielle Wert <systemitem class="filesystem">.</systemitem> gibt
       an, dass das Arbeitsverzeichnes des Skriptes als Basis-Verzeichnis
       verwendet wird. Dies ist gefährtlich, da das Arbeitsverzeichnis mit
       <function>chdir</function> einfach geändert werden kann.
      </para>
      <para>
       In der Konfigurationsdatei <filename>httpd.conf</filename> kann
       <option>open_basedir</option>
       <link linkend="configuration.changes.apache">genau wie jede andere</link>
       Direktive mit "<literal>php_admin_value open_basedir none</literal>"
       geändert oder deaktiviert werden (&zb; für einige virtuelle Hosts).
      </para>
      <para>
       Unter Windows müssen die Verzeichnisse mit einem Semikolon getrennt
       werden, auf allen anderen Systemen mit einem Doppelpunkt. Wenn PHP als
       Apache-Modul läuft, erbt <option>open_basedir</option> seinen Pfad nun
       automatisch von übergeordneten Verzeichnissen.
      </para>
      <para>
       Die mit <option>open_basedir</option> angegebene Einschränkung ist ein
       Verzeichnisname, kein Präfix.
      </para>
      <para>
       Standardmäßig dürfen alle Dateien geöffnet werden.
      </para>
      <note>
       <simpara>
        open_basedir kann zur Laufzeit weiter eingeschränkt werden. Das heißt,
        wenn open_basedir laut &php.ini; auf <literal>/www/</literal> gesetzt
        ist, kann die Direktive zur Laufzeit mit <function>ini_set</function>
        beispielsweise weiter auf <literal>/www/tmp/</literal> begrenzt
        werden. Wenn mehrere Verzeichnisse aufgelistet werden, kann die
        Konstante <constant>PATH_SEPARATOR</constant> unabhängig vom
        Betriebssystem als Trennzeichen verwendet werden.
       </simpara>
        <simpara>
         Seit PHP 8.3.0 akzeptiert <option>open_basedir</option> keinen zur
         Laufzeit mittels <function>ini_set</function> gesetzten Pfad mehr, der
         das übergeordnete Verzeichnis (<literal>..</literal>) enthält.
        </simpara>
      </note>
      <note>
       <para>
        Die Verwendung von open_basedir setzt
        <link linkend="ini.realpath-cache-size">realpath_cache_size</link> auf
        <literal>0</literal> und <emphasis>deaktiviert</emphasis> somit den
        realpath-Cache.
       </para>
      </note>
       <caution>
        <para>
         <literal>open_basedir</literal> ist nur ein zusätzliches
         Sicherheitsnetz, das in keiner Weise umfassend ist und daher nicht
         als verlässlich angesehen werden kann, wenn Sicherheit erforderlich
         ist.
        </para>
       </caution>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.doc-root">
     <term>
      <parameter>doc_root</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier wird das Stammverzeichnis der PHP-Skripte auf dem Server
       angegeben. Diese Option wird nur verwendet, wenn ein Wert angegeben
       wird. Wenn PHP nicht mit FORCE_REDIRECT kompiliert wurde,
       <emphasis>sollten</emphasis> Sie doc_root setzen, wenn Sie PHP als
       CGI-Version laufen lassen (betrifft alle Webserver außer IIS). Die
       Alternative ist, die Option
       <link linkend="ini.cgi.force-redirect">cgi.force_redirect</link> zu
       verwenden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.user-ini.cache-ttl">
     <term>
      <parameter>user_ini.cache_ttl</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.user-ini.filename">
     <term>
      <parameter>user_ini.filename</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.user-dir">
     <term>
      <parameter>user_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Der Basisname des Verzeichnisses, das für Benutzer-Verzeichnisse mit
       PHP-Dateien verwendet wird, &zb;
       <filename class="directory">public_html</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.extension-dir">
     <term>
      <parameter>extension_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Das Verzeichnis, in dem PHP dynamisch zu ladende Erweiterungen findet.
       Es wird empfohlen, einen absoluten Pfad anzugeben. Siehe auch
       <link linkend="ini.enable-dl">enable_dl</link> und
       <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.extension">
     <term>
      <parameter>extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Dynamisch zu ladende Erweiterungen, die geladen werden sollen, wenn PHP
       gestartet wird.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.zend-extension">
     <term>
      <parameter>zend_extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Der Name einer dynamisch ladbaren Zend-Erweiterung (beispielsweise
       Xdebug), welche geladen werden soll, wenn PHP startet.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.check-shebang-line">
     <term>
      <parameter>cgi.check_shebang_line</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Kontrolliert, ob die <acronym>CGI</acronym>-Version von PHP am Anfang
       des auszuführenden Skripts nach einer Zeile sucht, die mit
       <literal>#!</literal> (Shebang) beginnt. Diese Zeile könnte notwendig
       sein, wenn das Skript sowohl die eigenständige Ausführung als auch die
       mittels PHP-<acronym>CGI</acronym> unterstützt. PHP überspringt diese
       Zeile im <acronym>CGI</acronym>-Modus und ignoriert ihren Inhalt, wenn
       diese Direktive eingeschaltet ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.discard-path">
     <term>
      <parameter>cgi.discard_path</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Ist dies aktiviert, kann das PHP-CGI-Binary sicher außerhalb des
       Web-Verzeichnisbaums abgelegt werden, ohne dass jemand in der Lage ist,
       die .htaccess-Sicherheit zu umgehen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.fix-pathinfo">
     <term>
      <parameter>cgi.fix_pathinfo</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Stellt <emphasis>echte</emphasis>
       <literal>PATH_INFO</literal>/<literal>PATH_TRANSLATED</literal>-Unterstützung
       für <acronym>CGI</acronym> zur Verfügung. Das frühere Verhalten von PHP
       war, <literal>PATH_TRANSLATED</literal> einfach auf
       <literal>SCRIPT_FILENAME</literal> zu setzen und nicht auf
       <literal>PATH_INFO</literal>. Für weitere Informationen zu
       <literal>PATH_INFO</literal> siehe die
       <acronym>CGI</acronym>-Spezifikation. Wenn Sie diesen Wert auf
       <literal>1</literal> setzen, hat dies zur Folge, dass
       PHP-<acronym>CGI</acronym> seine Pfade entsprechend der Spezifikation
       anpasst. Bei einem Wert von Null verhält sich PHP entsprechend den
       früheren Versionen. Standardmäßig ist es eingeschaltet. Es wird
       empfohlen, Ihre Skripte dahingehend anzupassen, statt
       <literal>PATH_TRANSLATED</literal> <literal>SCRIPT_FILENAME</literal>
       zu verwenden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.force-redirect">
     <term>
      <parameter>cgi.force_redirect</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Wenn PHP als <acronym>CGI</acronym>-Version läuft, wird unter den
       meisten Webservern cgi.force_redirect benötigt, um Sicherheit zu
       garantieren. Wenn diese Option nicht angegeben wird, setzt PHP sie
       standardmäßig auf "on". <emphasis>Auf Ihre eigene Gefahr hin</emphasis>
       können Sie dies ausschalten ("off").
      </para>
      <note>
       <para>
        Windows-Benutzer: Unter IIS <emphasis>muss</emphasis> diese Option
        ausgeschaltet werden. Für OmniHTTPD und Xitami gilt selbiges.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.nph">
     <term>
      <parameter>cgi.nph</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Ist cgi.nph aktiviert, zwingt es CGI immer, Status: 200 für jede
       Anfrage zu senden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.redirect-status-env">
     <term>
      <parameter>cgi.redirect_status_env</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Wenn cgi.force_redirect eingeschaltet ist und Sie nicht den Apache-
       oder Netscape-Webserver (iPlanet) verwenden, müssen Sie
       <emphasis>eventuell</emphasis> eine Umgebungsvariable setzen, damit PHP
       weiß, ob es die Ausführung fortführen darf.
      </para>
      <note>
       <para>
        Das Setzen dieser Variablen <emphasis>kann</emphasis>
        Sicherheitsrisiken verursachen, <emphasis>Sie sollten also genau
        wissen, was Sie tun</emphasis>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.cgi.rfc2616-headers">
     <term>
      <parameter>cgi.rfc2616_headers</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Bestimmt, welcher Typ von Headern verwendet werden soll, wenn
       HTTP-Antwortcodes gesendet werden. Wenn diese Option deaktiviert ist,
       sendet PHP einen
       <link xlink:href="&url.rfc;3875">RFC 3875</link>-"Status:"-Header, der
       von Apache und anderen Webservern unterstützt wird. Ist sie aktiviert,
       sendet PHP einen zu
       <link xlink:href="&url.rfc;2616">RFC 2616</link> konformen Header.
      </para>
      <para>
       Ist diese Option aktiviert, und Sie führen PHP in einer CGI-Umgebung
       (&zb; PHP-FPM) aus, sollten Sie keine üblichen RFC 2616 HTTP
       Status-Response-Header verwenden; stattdessen sollten Sie ihre RFC
       3875-Pendants nutzen, &zb; sollten Sie anstelle von header("HTTP/1.0
       404 Not found"); header("Status: 404 Not Found"); verwenden.
      </para>
      <para>
       Wenn Sie diese Option nicht verstehen, lassen Sie sie deaktiviert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.fastcgi.impersonate">
     <term>
      <parameter>fastcgi.impersonate</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       FastCGI unterstützt unter dem IIS (auf WINNT-basierten
       Betriebssystemen) die Möglichkeit, Sicherheitsmerkmale des aufrufenden
       Clients zu bestimmen. Dies ermöglicht es dem IIS, den
       Sicherheitskontext zu bestimmen, in dem der Zugriff läuft. mod_fastcgi
       unter Apache unterstützt diese Funktion zur Zeit nicht (17.03.2002).
       Aktivieren Sie diese Option, wenn Sie den IIS verwenden. Der
       Standardwert ist deaktiviert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.fastcgi.logging">
     <term>
      <parameter>fastcgi.logging</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Schaltet das SAPI-Logging an, wenn FastCGI verwendet wird.
       Standardmäßig ist das Logging aktiviert.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.file-uploads">
  <title>Datei-Uploads</title>
  <para>
   <table>
    <title>Konfigurationsoptionen für Datei-Uploads</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.file-uploads">file_uploads</link></entry>
       <entry>"1"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-tmp-dir">upload_tmp_dir</link></entry>
       <entry>NULL</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
       <entry>64</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
       <entry>1000</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-max-filesize">upload_max_filesize</link></entry>
       <entry>"2M"</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.max-file-uploads">max_file_uploads</link></entry>
       <entry>20</entry>
       <entry><constant>INI_PERDIR</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.file-uploads">
     <term>
      <parameter>file_uploads</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob <link linkend="features.file-upload">Datei-Uploads</link>
       per HTTP erlaubt sind. Siehe auch die Optionen
       <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
       <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> und
       <link linkend="ini.post-max-size">post_max_size</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.upload-tmp-dir">
     <term>
      <parameter>upload_tmp_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Das temporäre Verzeichnis, in dem Dateien während des Uploads
       gespeichert werden. Für dieses Verzeichnis muss der Benutzer, unter dem
       PHP läuft, Schreibberechtigung haben. Wenn hier nichts angeben wird,
       verwendet PHP das Standardverzeichnis des Systems.
      </para>
      <para>
       Wenn das hier angegebene Verzeichnis nicht beschreibbar ist, nutzt PHP
       stattdessen das Standardverzeichnis für temporäre Dateien. Wenn
       <link linkend="ini.open-basedir">open_basedir</link> genutzt wird, muss
       dieses Standardverzeichnis erlaubt sein, damit Uploads funktionieren.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.upload-max-filesize">
     <term>
      <parameter>upload_max_filesize</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Die maximale Größe, die eine hochgeladene Datei haben darf.
      </para>
      <para>
       <link linkend="ini.post-max-size">post_max_size</link> muss größer als
       dieser Wert sein.
      </para>

      &ini.shorthandbytes;

     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.max-file-uploads">
     <term>
      <parameter>max_file_uploads</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Die maximale Anzahl an Dateien, die gleichzeitig hochgeladen werden
       kann. Upload-Formularfelder, die leer gelassen wurden, zählen nicht zu
       diesem Limit.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.sql-general">
  <title>Allgemeines SQL</title>
  <para>
   <table>
    <title>Konfigurationsoptionen für allgemeines SQL</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.sql.safe-mode">sql.safe_mode</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_SYSTEM</constant></entry>
       <entry>Entfernt in PHP 7.2.0</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.sql.safe-mode">
     <term>
      <parameter>sql.safe_mode</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Wenn diese Option eingeschaltet wird, werden
       Datenbankverbindungsfunktionen, die Standardwerte vorgeben, diese Werte
       anstelle der angegebenen Parameter verwenden. Zu Informationen über die
       Standardwerte können Sie einen Blick auf die Dokumentation der
       Verbindungsfunktionen der jeweiligen Datenbank werfen.
      </para>
      <warning>
       <simpara>
        Dieses Feature wurde von PHP 7.2.0 an <emphasis>ENTFERNT</emphasis>.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="ini.sect.windows">
  <title>Windows-spezifisch</title>
  <para>
   <table>
    <title>Windows-spezifische Optionen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.windows-show-crt-warning">windows.show_crt_warning</link></entry>
       <entry>"0"</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.windows-show-crt-warning">
     <term>
      <parameter>windows.show_crt_warning</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Wenn diese Direktive angeschaltet ist, werden Windows CRT Warnings
       angezeigt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
