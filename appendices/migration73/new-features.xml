<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b37727abaf0e731a05c516fd85b44e86f4bf5c75 Maintainer: samesch Status: ready -->

<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Neue Features</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>PHP-Kern</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>Flexiblere Heredoc- und Nowdoc-Syntax</title>

   <para>
    Auf den schließenden Bezeichner für doc-Zeichenketten muss kein Semikolon
    oder Zeilenumbruch mehr folgen. Außerdem darf der schließende Bezeichner
    eingerückt sein; in diesem Fall wird die Einrückung aus allen Zeilen der
    doc-Zeichenkette entfernt.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>Die Destrukturierung (Zerlegung) von Arrays unterstützt Referenzzuweisungen</title>

   <para>
    Die Destrukturierung von Arrays unterstützt nun mithilfe der Syntax
    <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal> Referenzzuweisungen. Dies
    wird auch bei <function>list</function> unterstützt.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>Der Operator instanceof akzeptiert Literale</title>

   <para>
    Der Operator <literal>instanceof</literal> akzeptiert nun ein Literal als
    ersten Operanden. In diesem Fall gibt das Ergebnis immer &false; zurück.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>CompileError-Exception anstelle von Kompilierungsfehlern</title>

   <para>
    Es wurde eine neue <classname>CompileError</classname>-Exception
    hinzugefügt, von der <classname>ParseError</classname> erbt. Eine kleine
    Anzahl von Kompilierungsfehlern löst nun eine
    <classname>CompileError</classname>-Exception aus, anstatt einen fatalen
    Fehler zu erzeugen. Derzeit betrifft dies nur Kompilierungsfehler, die von
    <function>token_get_all</function> im Modus
    <constant>TOKEN_PARSE</constant> ausgelöst werden können, aber in Zukunft
    könnten weitere Fehler in diese Exception konvertiert werden.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>Komma am Ende von Aufrufen erlaubt</title>

   <para>
    Am Ende von Funktions- und Methodenaufrufen sind nun Kommas erlaubt.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Unterstützung für Argon2id</title>

   <para>
    Mit der Konfigurationsoption
    <option role="configure">--with-password-argon2[=dir]</option>
    unterstützen die Funktionen <function>password_hash</function>,
    <function>password_verify</function>,
    <function>password_get_info</function> und
    <function>password_needs_rehash</function> nun Argon2i- und
    Argon2id-Hashes. Passwörter können gehasht und mit der Konstante
    <constant>PASSWORD_ARGON2ID</constant> verifiziert werden. Um die
    Unterstützung für Argon2i und Argon2id in den
    <function>password_*</function>-Funktionen nutzen zu können, muss PHP
    gegen die libargon2-Referenzbibliothek ≥ 20161029 gelinkt sein.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>FastCGI-Prozessmanager (FPM)</title>

  <para>
   Es wurden neue Optionen zur Anpassung der FPM-Protokollierung hinzugefügt:
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       Diese globale Option wird verwendet, um die maximale Textlänge für die
       Protokollierung festzulegen, sodass es möglich ist, mehr als 1024
       Zeichen ohne Zeilenumbrüche zu protokollieren. Dadurch werden auch
       verschiedene Probleme mit Zeilenumbrüchen behoben.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       Diese globale Option ermöglicht eine experimentelle Protokollierung
       ohne zusätzliche Pufferung.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       Wenn <literal>catch_workers_output</literal> aktiviert ist, kann diese
       Pool-Option verwendet werden, um die Dekoration der Worker-Ausgabe zu
       deaktivieren.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>BCMath-Funktionen</title>

  <para>
   Die Funktion <function>bcscale</function> kann nun auch als "Getter"
   verwendet werden, um die aktuell verwendete Genauigkeit abzurufen.
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>Lightweight Directory Access Protocol (LDAP)</title>

  <para>
   Die <link linkend="book.ldap">LDAP</link>-Abfragefunktionen und die
   Funktion <function>ldap_parse_result</function> unterstützen nun sämtliche
   Steuerelemente von LDAP:
   <itemizedlist>
    <listitem>
     <simpara>
      Um Steuerbefehle an den Server senden zu können, wurde den Funktionen
      <function>ldap_add</function>, <function>ldap_mod_replace</function>,
      <function>ldap_mod_add</function>, <function>ldap_mod_del</function>,
      <function>ldap_rename</function>, <function>ldap_compare</function>,
      <function>ldap_delete</function>, <function>ldap_modify_batch</function>,
      <function>ldap_search</function>, <function>ldap_list</function> und
      <function>ldap_read</function> der Parameter
      <literal>$controls</literal> hinzugefügt.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Um Steuerbefehle vom Server abrufen zu können wurde der Funktion
      <function>ldap_parse_result</function> der Parameter
      <literal>$controls</literal> hinzugefügt.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      In den Funktionen <function>ldap_get_option</function> und
      <function>ldap_set_option</function> wurde die Unterstützung für
      <constant>LDAP_OPT_SERVER_CONTROLS</constant> und
      <constant>LDAP_OPT_CLIENT_CONTROLS</constant> korrigiert.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>Multibyte-Zeichenketten-Funktionen</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>Vollständige Unterstützung für Case-Mapping und Case-Folding</title>

   <para>
    Die Unterstützung für die vollständige Umwandlung und den Vergleich von
    Groß- und Kleinschreibung wurde hinzugefügt. Im Gegensatz zur einfachen
    Umwandlung der Groß-/Kleinschreibung kann die vollständige Umwandlung die
    Länge der Zeichenkette ändern. Zum Beispiel:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Ergibt in PHP 7.2 STRAßE
// Ergibt in PHP 7.3 STRASSE
?>
]]>
     </programlisting>
    </informalexample>
    In <function>mb_convert_case</function> stehen verschiedene Modi für die
    Umwandlung und zum Vergleich von Groß- und Kleinschreibung zur Verfügung:
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant> (wird verwendet von
       <function>mb_strtolower</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant> (wird verwendet von
       <function>mb_strtoupper</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant> (wird bei Operationen
       verwendet, die Groß- und Kleinschreibung nicht berücksichtigen)
      </simpara>
     </listitem>
    </itemizedlist>
    Es wird nur uneingeschränktes und sprachunabhängiges vollständiges
    Case-Mapping durchgeführt.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>Operationen, die Groß-/Kleinschreibung nicht berücksichtigen, verwenden Case-Folding</title>

   <para>
    Bei Operationen mit Zeichenketten, die die Groß-/Kleinschreibung nicht
    berücksichtigen, wird nun Case-Folding anstelle von Case-Mapping
    verwendet. Das bedeutet, dass mehr Zeichen als gleich (ohne
    Berücksichtigung der Groß-/Kleinschreibung) angesehen werden.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE führt eine Title-Case-Umwandlung durch</title>

   <para>
    <function>mb_convert_case</function> führt in Verbindung mit
    <constant>MB_CASE_TITLE</constant> nun eine Title-Case-Umwandlung durch,
    die auf den von Cased und CaseIgnorable abgeleiteten Unicode-Eigenschaften
    basiert. Diese Änderung verbessert insbesondere auch die Behandlung von
    Anführungszeichen und Apostrophen.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Unterstützung für Unicode 11</title>

   <para>
    Die Datentabellen für
    <link linkend="book.mbstring">Multibyte-Zeichenketten</link> wurden
    aktualisiert, um Unicode 11 zu unterstützen.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>Unterstützung für lange Zeichenketten</title>

   <para>
    Die Funktionen für
    <link linkend="ref.mbstring">Multibyte-Zeichenketten</link> unterstützen
    nun auch Zeichenketten, die größer als 2GB sind.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>Verbesserung der Leistung</title>

   <para>
    Die Leistung der Erweiterung
    <link linkend="book.mbstring">Multibyte-Zeichenketten</link> wurde in
    allen Bereichen erheblich verbessert. Die größten Verbesserungen betreffen
    die Funktionen zur Umwandlung der Groß-/Kleinschreibung.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>Unterstützung für benannte Übereinstimmungen</title>

   <para>
    Die <literal>mb_ereg_*</literal>-Funktionen unterstützen nun benannte
    Übereinstimmungen. Funktionen, die wie <function>mb_ereg</function> nach
    Übereinstimmungen suchen, geben nun ähnlich wie die Funktionen bei PCRE
    benannte Übereinstimmungen zurück, indem sie sowohl ihre Gruppennummern
    als auch ihre Namen verwenden:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    Außerdem unterstützt <function>mb_ereg_replace</function> nun die
    Notationen <code>\k&lt;&gt;</code> und <code>\k''</code>, um benannte
    Übereinstimmungen in der Ersetzungszeichenkette zu referenzieren:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> und <code>\k''</code> können auch für numerische
    Verweise verwendet werden, was auch mit Gruppennummern funktioniert, die
    größer als 9 sind.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   Bei der Funktion <function>readline_info</function> wurde die Unterstützung
   für die Optionen <literal>completion_append_character</literal> und
   <literal>completion_suppress_append</literal> hinzugefügt. Diese Optionen
   sind nur verfügbar, wenn PHP gegen libreadline (statt libedit) gelinkt ist.
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
