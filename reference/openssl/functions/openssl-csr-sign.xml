<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6338117af97ec5a8d5d8e1b1ba632918f8147e2e Maintainer: nobody Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-csr-sign" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_csr_sign</refname>
  <refpurpose>
   Signiert einen <acronym>CSR</acronym> mit einem anderen Zertifikat (oder
   sich selbst) und generiert ein Zertifikat
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>OpenSSLCertificate</type><type>false</type></type><methodname>openssl_csr_sign</methodname>
   <methodparam><type class="union"><type>OpenSSLCertificateSigningRequest</type><type>string</type></type><parameter>csr</parameter></methodparam>
   <methodparam><type class="union"><type>OpenSSLCertificate</type><type>string</type><type>null</type></type><parameter>ca_certificate</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>private_key</parameter></methodparam>
   <methodparam><type>int</type><parameter>days</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>serial</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>serial_hex</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_csr_sign</function> erzeugt eine x509-Zertifikatressource
   aus dem übergebenen <acronym>CSR</acronym>.
  </para>
  &note.openssl.cnf;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>csr</parameter></term>
     <listitem>
      <para>
       Ein zuvor mit <function>openssl_csr_new</function> erzeugter
       <acronym>CSR</acronym>. Es kann sich aber auch um den Pfad zu einer
       <acronym>PEM</acronym>-kodierten <acronym>CSR</acronym>-Datei in der
       Form <filename>file://path/to/csr</filename> handeln, oder eine
       Zeichenkette wie von <function>openssl_csr_export</function>
       zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ca_certificate</parameter></term>
     <listitem>
      <para>
       Das generierte Zertifikat wird mit
       <parameter>ca_certificate</parameter> signiert. Falls hier &null;
       angegeben wird, wird ein selbstsigniertes Zertifikat erstellt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>private_key</parameter></term>
     <listitem>
      <para>
       <parameter>private_key</parameter> ist der zu
       <parameter>ca_certificate</parameter> gehörende private Schlüssel.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>days</parameter></term>
     <listitem>
      <para>
       <parameter>days</parameter> gibt die Gültigkeitsdauer des Zertifikats
       in Tagen an.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Mit <parameter>options</parameter> kann die Signierung des
       <acronym>CSR</acronym> feiner abgestimmt werden. Weitere Informationen
       zu <parameter>options</parameter> sind
       <function>openssl_csr_new</function> zu entnehmen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>serial</parameter></term>
     <listitem>
      <para>
       Eine optionale Seriennummer für das ausgestellte Zertifikat. Wenn nicht
       angegeben, wird der Standardwert 0 verwendet.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>serial_hex</parameter></term>
     <listitem>
      <para>
       Eine optionale hexadezimale Zeichenkette, die die Seriennummer des
       ausgestellten Zertifikats angibt. Wenn sie angegeben wird, hat sie
       Vorrang vor dem Wert des Parameters <parameter>serial</parameter>. Wird
       sie nicht angegeben oder auf &null; gesetzt, wird stattdessen der Wert
       des Parameters <parameter>serial</parameter> verwendet.
       instead.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg ein <classname>OpenSSLCertificate</classname> zurück,
   &false; bei einem Fehler.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       Den Parameter <parameter>serial_hex</parameter> hinzugefügt.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Bei Erfolg gibt diese Funktion nun eine
       <classname>OpenSSLCertificate</classname>-Instanz zurück; vorher wurde
       eine &resource; vom Typ <literal>OpenSSL X.509</literal> zurückgegeben.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>csr</parameter> akzeptiert nun eine
       <classname>OpenSSLCertificateSigningRequest</classname>-Instanz; vorher
       wurde eine &resource; vom Typ <literal>OpenSSL X.509 CSR</literal>
       akzeptiert.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>ca_certificate</parameter> akzeptiert nun eine
       <classname>OpenSSLCertificate</classname>-Instanz; vorher wurde eine
       &resource; vom Typ <literal>OpenSSL X.509</literal> akzeptiert.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>private_key</parameter> akzeptiert nun eine
       <classname>OpenSSLAsymmetricKey</classname>- oder
       <classname>OpenSSLCertificate</classname>-Instanz; vorher wurde eine
       &resource; vom Typ <literal>OpenSSL-Schlüssel</literal> oder
       <literal>OpenSSL X.509</literal> akzeptiert.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>openssl_csr_sign</function>-Beispiel - Signieren eines
    <acronym>CSR</acronym> (wie eine eigene CA implementiert wird)</title>
    <programlisting role="php">
<![CDATA[
<?php
// Annahme: dieses Skript erhält einen CSR, der auf einer anderen Seite in
// eine Textarea eingegeben wurde.
$csrdata = $_POST["CSR"];

// Wir werden die Anfrage mit unserem eigenen
// "certificate authority"-Zertifikat signieren. Sie können jedes beliebige
// Zertifikat verwenden, um ein anderes zu signieren. Aber das Ganze ist
// ziemlich nutzlos, solange die Software/Benutzer, die dieses neu signierte
// Zertifikat nutzen werden, dem signierenden Zertifikat nicht vertrauen.

// Wir benötigen unser CA-Zertifikat und dessen privaten Schlüssel
$cacert = "file://path/to/ca.crt";
$privkey = array("file://path/to/ca.key", "your_ca_key_passphrase");

$usercert = openssl_csr_sign($csrdata, $cacert, $privkey, 365, array('digest_alg'=>'sha256') );

// Jetzt zeigen wir das generierte Zertifikat an, damit die Benutzer es
// kopieren und in ihre lokale Konfiguration einfügen können (wie z.B. eine
// Datei, die das Zertifikat für ihren SSL-Server enthalten soll.
openssl_x509_export($usercert, $certout);
echo $certout;

// Anzeigen aller aufgetretenen Fehler
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
