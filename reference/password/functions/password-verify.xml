<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5baba54a67be43d689970983cfc6d24debad1ce0 Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: f93ab9943c0246504e18493e315b7638efe81753 Reviewer: samesch -->
<refentry xml:id="function.password-verify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>password_verify</refname>
  <refpurpose>Überprüft, ob ein Passwort und ein Hash zusammenpassen</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>password_verify</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>hash</parameter></methodparam>
  </methodsynopsis>
  <para>
   Überprüft, ob ein Passwort und ein Hash zusammenpassen.
   <function>password_verify</function> ist kompatibel zu
   <function>crypt</function>. Daher können Passwort-Hashes, die mit
   <function>crypt</function> erzeugt wurden, mit
   <function>password_verify</function> verwendet werden.
  </para>
  <para>
   Es ist zu beachten, dass <function>password_hash</function> den
   Algorithmus, den Aufwand und den Salt als Teil des Hashes zurückgibt. Somit
   sind in Hash alle Informationen enthalten, die für die Überprüfung des
   Hashes erforderlich sind. Dies erlaubt es der Funktion, den Hash zu prüfen,
   ohne dass Informationen über den Salt oder den Algorithmus an anderer
   Stelle gespeichert werden müssen.
  </para>
  <para>
   Diese Funktion ist vor Timing-Angriffen sicher.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>password</parameter></term>
    <listitem>
     <para>
      &password.parameter.password;
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>hash</parameter></term>
    <listitem>
     <para>
      &password.parameter.hash;
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt &true; zurück, falls Passwort und Hash zusammenpassen, sonst &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>password_verify</function>-Beispiel</title>
    <para>
     Dies ist ein vereinfachtes Beispiel; es wird empfohlen, ein korrektes
     Passwort bei Bedarf noch einmal zu hashen; siehe
     <function>password_needs_rehash</function> für ein Beispiel.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Siehe auch das password_hash()-Beispiel in diesem Kontext
$hash = '$2y$12$4Umg0rCJwMswRw/l.SwHvuQV01coP0eWmGzd61QH2RvAOMANUBGC.';

if (password_verify('rasmuslerdorf', $hash)) {
    echo 'Valides Passwort!';
} else {
    echo 'Invalides Passwort.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Valides Passwort!
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>password_needs_rehash</function></member>
    <member><function>password_hash</function></member>
    <member><function>sodium_crypto_pwhash_str_verify</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
