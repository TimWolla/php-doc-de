<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5eaa3458d57434d0ce08207726a7d25df2994c6d Maintainer: conni Status: ready -->
<refentry xml:id="function.socket-getpeername" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_getpeername</refname>
  <refpurpose>Fragt das entfernte Ende eines gegebenen Sockets ab</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>socket_getpeername</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">port</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Fragt das entfernte Ende eines gegebenen Sockets ab. Das Ergebnis ist vom
   Typ abhängig und ist entweder das Paar host/port oder ein Pfad des
   Unix-Dateisystems.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Eine <classname>Socket</classname>-Instanz, die mit
       <function>socket_create</function> oder
       <function>socket_accept</function> erzeugt wurde.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Falls der angegebene Socket vom Typ <constant>AF_INET</constant> oder
       <constant>AF_INET6</constant> ist, gibt
       <function>socket_getpeername</function> die
       <emphasis>IP-Addresse</emphasis> des entfernten Peers in der passenden
       Notation (&zb; <literal>127.0.0.1</literal> oder
       <literal>fe80::1</literal>) im Parameter <parameter>address</parameter>
       zurück. Falls der optionale Parameter <parameter>port</parameter>
       angegeben ist, wird der zugehörige Port ebenfalls zurückgegeben.
      </para>
      <para>
       Falls der angegebene Socket vom Typ <constant>AF_UNIX</constant>
       ist, gibt <function>socket_getpeername</function> den Pfad des
       Unix-Dateisystems (&zb; <literal>/var/run/daemon.sock</literal>)
       in dem Parameter <parameter>address</parameter> zurück.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Falls angegeben, wird hier der mit <parameter>address</parameter>
       verknüpfte Port zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success; <function>socket_getpeername</function> kann aber auch
   &false; zurückgeben, falls der Socket weder vom Typ
   <constant>AF_INET</constant> noch vom Typ <constant>AF_INET6</constant>
   oder <constant>AF_UNIX</constant> ist. In diesem Fall wird der letzte
   Fehlercode für den Socket <emphasis>nicht</emphasis> aktualisiert.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>socket_getpeername</function> sollte nicht mit
    <constant>AF_UNIX</constant>-Sockets verwendet werden, die mit
    <function>socket_accept</function> erzeugt wurden. Nur Sockets, die mit
    <function>socket_connect</function> erzeugt wurden oder primäre
    Server-Sockets, nach einem Aufruf von <function>socket_bind</function>,
    geben brauchbare Ergebnisse zurück.
   </para>
  </note>
  <note>
   <para>
    Damit <function>socket_getpeername</function> einen sinnvollen Wert
    zurückgibt, muss für den Socket, auf den sie angewendet wird, das Konzept
    "peer" sinnvoll sein.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_getsockname</function></member>
    <member><function>socket_last_error</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
