<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 761d72245071f89a626903c9bcdc6aaff1252d54 Maintainer: sammywg Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.min" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>min</refname>
  <refpurpose>Bestimmt den Minimalwert</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>min</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Alternative Signatur (benannte Parameter werden nicht unterstützt):
  </simpara>
  <methodsynopsis>
   <type>mixed</type><methodname>min</methodname>
   <methodparam><type>array</type><parameter>value_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ist der erste und einzige Parameter ein Array, gibt
   <function>min</function> den niedrigsten Wert dieses Arrays zurück. Werden
   mindestens zwei Parameter übergeben, gibt <function>min</function> den
   kleinsten dieser Werte zurück.
  </para>
  <note>
   <para>
    Werte unterschiedlichen Typs werden unter Verwendung der
    <link linkend="language.operators.comparison">Standard-Vergleichsregeln</link>
    verglichen. Zum Beispiel wird ein nichtnumerischer <type>string</type>
    mit einem <type>int</type> verglichen, als ob er <literal>0</literal>
    wäre, aber mehrere nichtnumerische <type>string</type>-Werte werden
    alphanumerisch verglichen. Der tatsächlich zurückgegebene Wert ist vom
    ursprünglichen Typ ohne angewandte Umwandlung.
   </para>
  </note>
  <caution>
   <simpara>
    Vorsicht ist geboten, wenn Argumente verschiedenen Typs übergeben werden,
    da <function>min</function> in diesem Fall unvorhersehbare Ergebnisse
    liefert.
   </simpara>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Ein <link linkend="language.operators.comparison">vergleichbarer</link>
       Wert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Jegliche
       <link linkend="language.operators.comparison">vergleichbaren</link> Werte.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value_array</parameter></term>
     <listitem>
      <para>
       Ein Array, das Werte enthält.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>min</function> gibt den gemäß den Standard-Vergleichen als
   "kleinsten" angesehenen Parameter-Wert zurück. Evaluieren mehrere Werte
   unterschiedlichen Typs als gleich (&zb; <literal>0</literal> und
   <literal>'abc'</literal>), wird der zuerst übergebene zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wird ein leeres Array übergeben, löst <function>min</function> einen
   <classname>ValueError</classname> aus.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <function>min</function> löst bei einem Fehler nun einen
       <classname>ValueError</classname> aus; vorher wurde &false;
       zurückgegeben und ein Fehler der Stufe <constant>E_WARNING</constant>
       ausgegeben.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Die Art und Weise, wie
       <link linkend="migration80.incompatible.core.string-number-comparision">Zeichenketten und Zahlen verglichen werden</link>,
       wurde geändert, sodass <function>min</function> in solchen Fällen nicht
       mehr je nach Reihenfolge der Argumente unterschiedliche Werte
       zurückgibt.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Beispiele für die Verwendung von <function>min</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo min(2, 3, 1, 6, 7), PHP_EOL;  // 1
echo min(array(2, 4, 5)), PHP_EOL; // 2

// Hier vergleichen wir -1 < 0, so dass -1 der kleinste Wert ist
echo min('hello', -1), PHP_EOL;    // -1

// Bei mehreren Arrays unterschiedlicher Länge, gibt min das kürzeste zurück
$val = min(array(2, 2, 2), array(1, 1, 1, 1)); // array(2, 2, 2)
var_dump($val);

// Mehrere Arrays gleicher Länge werden von links nach rechts verglichen,
// daher ist in unserem Beispiel 2 == 2, aber 4 < 5
$val = min(array(2, 4, 8), array(2, 5, 1)); // array(2, 4, 8)
var_dump($val);

// Sind ein Array und ein Nicht-Array-Parameter gegeben, wird nie das Array zurückgegeben,
// da Vergleiche Arrays als größer behandeln als alle anderen Werte
$val = min('string', array(2, 5, 7), 42);   // string
var_dump($val);

// Ist ein Argument NULL oder ein boolescher Wert, wird es mit anderen Werten
// unter Verwendung der Regeln FALSE < TRUE und NULL == FALSE verglichen, ohne Rücksicht auf die anderen beteiligten Typen
// In den folgenden Beispielen wird -10 im Vergleich wie TRUE behandelt
$val = min(-10, FALSE, 10); // FALSE
var_dump($val);

$val = min(-10, NULL, 10);  // NULL
var_dump($val);

// Andererseits wird 0 wie FALSE behandelt, so dass es "kleiner" ist als TRUE
$val = min(0, TRUE); // 0
var_dump($val);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>max</function></member>
    <member><function>count</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
