<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2e60c5134e7a847c99f81eb3f7ecee1f5efeeace Maintainer: wiesemann Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a6655e3f9508eee6860b02f55e33560a790f42d1 Reviewer: samesch -->
<!-- CREDITS: tom -->
<refentry xml:id="function.each" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>each</refname>
  <refpurpose>
   Liefert das aktuelle Schlüssel-Wert-Paar eines Arrays und rückt den
   Arrayzeiger vor
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-7-2-0.removed-8-0-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>each</methodname>
   <methodparam><type class="union"><type>array</type><type>object</type></type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt das aktuelle Schlüssel-Wert-Paar von <parameter>array</parameter>
   zurück und rückt den Arrayzeiger vor.
  </para>
  <para>
   Nachdem <function>each</function> ausgeführt wurde, bleibt der Arrayzeiger
   beim nächsten Element des Arrays oder, am Ende des Arrays angelangt, hinter
   dem letzten Element. Um das Array erneut mittels <function>each</function>
   zu durchlaufen, muss die Funktion <function>reset</function> aufgerufen
   werden.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Eingabe-Array.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt das aktuelle Schlüssel-Wert-Paar aus dem Array
   <parameter>array</parameter> zurück. Dieses Paar wird als Array
   mit vier Elementen zurückgegeben, und zwar mit den Schlüsseln
   <literal>0</literal>, <literal>1</literal>, <literal>key</literal>,
   und <literal>value</literal>. Die Elemente <literal>0</literal> und
   <literal>key</literal> enthalten den Namen des Schlüssels,
   <literal>1</literal> und <literal>value</literal> den Wert.
  </para>
  <para>
   Zeigt der interne Zeiger hinter das Ende der Array-Inhalte, gibt
   <function>each</function> &false; zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>each</function>-Beispiele</title>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     <varname>$bar</varname> enthält nun die folgenden Schlüssel-Wert-Paare:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => bob
    [value] => bob
    [0] => 0
    [key] => 0
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <informalexample>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$foo = array("Robert" => "Bob", "Seppo" => "Sepi");
$bar = each($foo);
print_r($bar);
?>
]]>
    </programlisting>
    <para>
     <varname>$bar</varname> enthält nun die folgenden Schlüssel-Wert-Paare:
    </para>
    <screen>
<![CDATA[
Array
(
    [1] => Bob
    [value] => Bob
    [0] => Robert
    [key] => Robert
)
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   <function>each</function> wird typischerweise in Verbindung mit
   <function>list</function> verwendet, um ein Array zu durchlaufen:
   <example>
    <title>Durchlaufen eines Arrays mit <function>each</function></title>
    <programlisting role="php" annotations="non-interactive">
<![CDATA[
<?php
$fruit = array('a' => 'Apfel', 'b' => 'Banane', 'c' => 'Preiselbeere');

reset($fruit);
while (list($key, $val) = each($fruit)) {
    echo "$key => $val\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
a => Apfel
b => Banane
c => Preiselbeere
]]>
    </screen>
   </example>
  </para>
  <caution>
   <para>
    Da die Zuweisung eines Arrays zu einer anderen Variable den ursprünglichen
    Arrayzeiger zurücksetzt, würde unser obiges Beispiel in eine Endlosschleife
    geraten, hätten wir <varname>$fruit</varname> innerhalb der Schleife
    einer anderen Variable zugeordnet.
   </para>
  </caution>
  <warning>
   <para>
    <function>each</function> akzeptiert auch Objekte, gibt aber eventuell
    unerwartete Ergebnisse zurück. Es ist daher nicht empfehlenswert, mit
    <function>each</function> über Objekteigenschaften zu iterieren.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>key</function></member>
    <member><function>list</function></member>
    <member><function>current</function></member>
    <member><function>reset</function></member>
    <member><function>next</function></member>
    <member><function>prev</function></member>
    <member>&foreach;</member>
    <member><link linkend="language.oop5.iterations">Objekt-Iteration</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
