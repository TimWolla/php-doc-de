<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4a1dedc24b1e085f298ab1d5dadefe306373691b Maintainer: gerdtsteltner Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: cd943f94a013b74df8765ab8e1a620a916a64a85 Reviewer: samesch -->
<!-- CREDITS: tom -->
<refentry xml:id="function.array-rand" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>array_rand</refname>
  <refpurpose>Liefert einen oder mehrere zufällige Schlüssel eines Arrays</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>string</type><type>array</type></type><methodname>array_rand</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>num</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Wählt einen oder mehrere Einträge aus einem Array aus und gibt den
   Schlüssel des zufälligen Eintrags bzw. die Schlüssel der zufälligen
   Einträge zurück.
  </para>
  &caution.cryptographically-insecure;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Eingabe-Array; darf nicht leer sein
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>num</parameter></term>
     <listitem>
      <para>
       Gibt an, wie viele Einträge ausgewählt werden sollen; muss größer als
       Null und kleiner oder gleich der Länge von <parameter>array</parameter>
       sein
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Wenn nur ein Eintrag ausgewählt wird, gibt <function>array_rand</function>
   den Schlüssel eines zufälligen Eintrages zurück. Andernfalls wird ein Array
   mit den Schlüsseln der zufälligen Einträge zurückgegeben. Dies hat den
   Zweck, dass zufällige Schlüssel und auch Werte aus dem Array ausgewählt
   werden können. Wenn mehrere Schlüssel zurückgegeben werden, werden sie in
   der Reihenfolge zurückgegeben, in der sie im ursprünglichen Array
   vorliegen.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn <parameter>array</parameter> leer ist oder <parameter>num</parameter>
   außerhalb des zulässigen Bereichs liegt, wird ein
   <classname>ValueError</classname> geworfen.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Wenn <parameter>num</parameter> außerhalb des zulässigen Bereichs
        liegt, wirft <function>array_rand</function> nun einen
        <classname>ValueError</classname>; zuvor wurde ein
        <constant>E_WARNING</constant> ausgegeben, und die Funktion gab &null;
        zurück.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Wenn <parameter>array</parameter> leer ist, wirft
        <function>array_rand</function> nun einen
        <classname>ValueError</classname>; zuvor wurde ein
        <constant>E_WARNING</constant> ausgegeben, und die Funktion gab &null;
        zurück.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Zur Erzeugung der Zufallszahlen
        <link linkend="migration71.incompatible.rand-srand-aliases">kommt intern nun</link>
        der
        <link xlink:href="&url.mersenne;">Mersenne-Primzahlen</link>-Zufallsgenerator
        statt der vorherigen libc-rand-Funktion zum Einsatz.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_rand</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("Neo", "Morpheus", "Trinity", "Cypher", "Tank");
$rand_keys = array_rand($input, 2);
echo $input[$rand_keys[0]] . "\n";
echo $input[$rand_keys[1]] . "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Random\Randomizer::pickArrayKeys</function></member>
    <member><function>Random\Randomizer::shuffleArray</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
