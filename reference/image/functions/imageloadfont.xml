<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a7e5e563d2d2269a6d7ccff506715a3e1a6f3902 Reviewer: samesch -->
<refentry xml:id="function.imageloadfont" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imageloadfont</refname>
  <refpurpose>Lädt eine neue Schriftart</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdFont</type><type>false</type></type><methodname>imageloadfont</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ImageLoadFont</function> lädt eine benutzerdefinierte
   Bitmap-Schriftart und gibt deren Kennung zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Das Schriftart-Dateiformat ist zurzeit ein architekturabhängiges,
       binäres Format. Das bedeutet, dass Schriftart-Dateien immer auf
       derselben Architektur erzeugt werden müssen, auf dem diese verwendet
       werden sollen.
      </para>
      <para>
       <table>
        <title>Scrhiftart-Dateiformat</title>
        <tgroup cols="3">
         <thead>
         <row>
          <entry>Byte-Position</entry>
          <entry>C Daten-Typ</entry>
          <entry>Beschreibung</entry>
         </row>
         </thead>
         <tbody>
          <row>
           <entry>Byte 0-3</entry>
           <entry>int</entry>
           <entry>Anzahl der Zeichen der Schriftart</entry>
          </row>
          <row>
           <entry>Byte 4-7</entry>
           <entry>int</entry>
           <entry>
            Wert des ersten Zeichens der Schriftart (meist 32 für Leerzeichen)
           </entry>
          </row>
          <row>
           <entry>Byte 8-11</entry>
           <entry>int</entry>
           <entry>Pixel-Breite jedes Zeichens</entry>
          </row>
          <row>
           <entry>Byte 12-15</entry>
           <entry>int</entry>
           <entry>Pixel-Höhe jedes Zeichens</entry>
          </row>
          <row>
           <entry>Byte 16-</entry>
           <entry>char</entry>
           <entry>
            Zeichen-Daten als Array, ein Byte je Pixel für jedes Zeichen; in
            der Summe also insgesamt (Anzahl Zeichen * Breite * Höhe) Byte.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine <classname>GdFont</classname>-Instanz zurück.
   &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.1.0</entry>
       <entry>
        Gibt nun eine <classname>GdFont</classname>-Instanz zurück; vorher
        wurde ein &integer; zurückgegeben.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imageloadfont</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Erzeuge ein neues Bild
$im = imagecreatetruecolor(50, 20);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);

// Färbe den Hintergrund weiß
imagefilledrectangle($im, 0, 0, 49, 19, $white);

// Lade die GD-Schriftart und schreibe 'Hallo'
$font = imageloadfont('./04b.gdf');
imagestring($im, $font, 0, 0, 'Hallo', $black);

// Ausgabe an Browser
header('Content-type: image/png');

imagepng($im);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagefontwidth</function></member>
   <member><function>imagefontheight</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
