<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5564c64a6cafa5bc7325afe8555562df469fc6a0 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="mysqlnd.config" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 &reftitle.runtime;
 &extension.runtime;

 <para>
  <table xml:id="mysqlnd.config.options">
   <title>Konfigurationsoptionen für den MySQL Native Driver</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody xml:id="mysqlnd.config.options.list">
     <row>
      <entry><link linkend="ini.mysqlnd.collect-statistics">mysqlnd.collect_statistics</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.collect-memory-statistics">mysqlnd.collect_memory_statistics</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.debug">mysqlnd.debug</link></entry>
      <entry>""</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.log-mask">mysqlnd.log_mask</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.mempool-default-size">mysqlnd.mempool_default_size</link></entry>
      <entry>16000</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.net-read-timeout">mysqlnd.net_read_timeout</link></entry>
      <entry>"86400"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Vor PHP 7.2.0 war der Standardwert "31536000" und die Veränderbarkeit
       war <constant>INI_SYSTEM</constant>
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.net-cmd-buffer-size">mysqlnd.net_cmd_buffer_size</link></entry>
      <entry>"4096"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.net-read-buffer-size">mysqlnd.net_read_buffer_size</link></entry>
      <entry>"32768"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.sha256-server-public-key">mysqlnd.sha256_server_public_key</link></entry>
      <entry>""</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.trace-alloc">mysqlnd.trace_alloc</link></entry>
      <entry>""</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.mysqlnd.fetch_data_copy">mysqlnd.fetch_data_copy</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Entfernt seit PHP 8.1.0</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.mysqlnd.collect-statistics">
    <term>
     <parameter>mysqlnd.collect_statistics</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Aktiviert das Sammeln verschiedener Client-Statistiken, auf die über
      <function>mysqli_get_client_stats</function> und
      <function>mysqli_get_connection_stats</function> zugegriffen werden
      kann, und die auch von der Funktion <function>phpinfo</function> im
      Abschnitt <literal>mysqlnd</literal> ausgegeben werden.
     </para>
     <para>
      Diese Konfigurationseinstellung aktiviert alle
      <link linkend="mysqlnd.stats">Statistiken des MySQL Native Drivers</link>
      mit Ausnahme derjenigen, die sich auf die Speicherverwaltung beziehen.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.collect-memory-statistics">
    <term>
     <parameter>mysqlnd.collect_memory_statistics</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Aktiviert das Sammeln verschiedener Speicherstatistiken, auf die über
      <function>mysqli_get_client_stats</function> und
      <function>mysqli_get_connection_stats</function> zugegriffen werden
      kann, und die auch von der Funktion <function>phpinfo</function> im
      Abschnitt <literal>mysqlnd</literal> ausgegeben werden.
     </para>
     <para>
      Diese Konfigurationseinstellung aktiviert die Statistiken zur
      Speicherverwaltung innerhalb der gesamten
      <link linkend="mysqlnd.stats">Statistiken des MySQL Native Drivers</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.debug">
    <term>
     <parameter>mysqlnd.debug</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Zeichnet die Kommunikation aller Erweiterungen, die
      <literal>mysqlnd</literal> verwenden, in der angegebenen Protokolldatei
      auf.
     </para>
     <para>
      Das Format der Direktive ist <literal>mysqlnd.debug =
      "option1[,parameter_option1][:option2[,parameter_option2]]"</literal>.
     </para>
     <para>
      Folgende Optionen stehen für die Formatzeichenkette zur Verfügung:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        A[,file] - Hängt die Trace-Ausgabe an die angegebene Datei an. Stellt
        außerdem sicher, dass die Daten nach jedem Schreibvorgang geschrieben
        werden. Zu diesem Zweck wird die Trace-Datei geschlossen und erneut
        geöffnet (was recht langsam ist). Dies trägt dazu bei, dass auch bei
        einem Absturz der Anwendung eine vollständige Protokolldatei vorhanden
        ist.
       </para>
      </listitem>
      <listitem>
       <para>
        a[,file] - Hängt die Trace-Ausgabe an die angegebene Datei an.
       </para>
      </listitem>
      <listitem>
       <para>
        d - Aktiviert die Ausgabe des Makros DBUG_&lt;N&gt; für den aktuellen
        Zustand. Es kann eine Liste mit Schlüsselwörtern angehängt werden, um
        nur die Ausgaben des DBUG-Makros auszuwählen, die diese
        Schlüsselwörter enthalten. Wenn eine leere Liste angegeben wird,
        werden alle Makros ausgegeben.
       </para>
      </listitem>
      <listitem>
       <para>
        f[,functions] - Beschränkt die Aktivitäten des Debuggers auf die
        angegebene Liste von Funktionen. Eine leere Liste impliziert, dass
        alle Funktionen ausgewählt werden.
       </para>
      </listitem>
      <listitem>
       <para>
        F - Versieht jede Zeile der Debugger-Ausgabe mit dem Namen der
        Quelldatei, die das Makro enthält, das die Ausgabe verursacht.
       </para>
      </listitem>
      <listitem>
       <para>
        i - Versieht jede Zeile der Debugger-Ausgabe mit der PID des aktuellen
        Prozesses.
       </para>
      </listitem>
      <listitem>
       <para>
        L - Versieht jede Zeile der Debugger-Ausgabe mit dem Namen der
        Quelldatei, die das Makro enthält, sowie der Zeile des Makros, das
        diese Ausgabe verursacht.
       </para>
      </listitem>
      <listitem>
       <para>
        n - Versieht jede Zeile der Debugger-Ausgabe mit der aktuellen Tiefe
        der Funktionsverschachtelung
       </para>
      </listitem>
      <listitem>
       <para>
        o[,file] - Ähnlich wie a[,file], überschreibt aber die alte Datei und
        hängt nicht an sie an.
       </para>
      </listitem>
      <listitem>
       <para>
        O[,file] - Ähnlich wie A[,file], überschreibt aber die alte Datei und
        hängt nicht an sie an.
       </para>
      </listitem>
      <listitem>
       <para>
        t[,N] - Aktiviert die Verfolgung des Kontrollflusses einer Funktion.
        Die maximale Verschachtelungstiefe wird durch N angegeben. Die
        Voreinstellung für N ist 200.
       </para>
      </listitem>
      <listitem>
       <para>
        x - Aktiviert die Erstellung von Profilen.
       </para>
      </listitem>
       <listitem>
       <para>
        m - Verfolgt die mit der Speicherzuweisung und -freigabe verbundenen
        Aufrufe.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      Beispiel:
     </para>
     <programlisting>
<![CDATA[
d:t:x:O,/tmp/mysqlnd.trace
]]>
     </programlisting>
     <note>
      <para>
       Dieses Funktionalität steht nur mit einem sogenannten Debug-Build von
       PHP zur Verfügung.
      </para>
     </note>
     <para></para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.log-mask">
    <term>
     <parameter>mysqlnd.log_mask</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Legt fest, welche Abfragen protokolliert werden sollen. Der Standardwert
      ist 0, was die Protokollierung deaktiviert. Die Definition erfolgt mit
      einer Ganzzahl und nicht mit PHP-Konstanten. Ein Wert von 48 (16 + 32)
      protokolliert zum Beispiel langsame Abfragen, die entweder einen
      fehlerhaften Index ("no good index") (SERVER_QUERY_NO_GOOD_INDEX_USED =
      16) oder überhaupt keinen Index (SERVER_QUERY_NO_INDEX_USED = 32)
      verwenden. Ein Wert von 2043 (1 + 2 + 8 + ... + 1024) protokolliert alle
      langsamen Abfragetypen.
     </para>
     <para>
      Folgende Typen stehen zur Verfügung: SERVER_STATUS_IN_TRANS=1,
      SERVER_STATUS_AUTOCOMMIT=2, SERVER_MORE_RESULTS_EXISTS=8,
      SERVER_QUERY_NO_GOOD_INDEX_USED=16, SERVER_QUERY_NO_INDEX_USED=32,
      SERVER_STATUS_CURSOR_EXISTS=64, SERVER_STATUS_LAST_ROW_SENT=128,
      SERVER_STATUS_DB_DROPPED=256, SERVER_STATUS_NO_BACKSLASH_ESCAPES=512
      und SERVER_QUERY_WAS_SLOW=1024.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.mempool-default-size">
    <term>
     <parameter>mysqlnd.mempool_default_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die voreingestellte Größe des mysqlnd-Speicherbereichs, der von den
      Ergebnismengen verwendet wird.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.net-read-timeout">
    <term>
     <parameter>mysqlnd.net_read_timeout</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      <literal>mysqlnd</literal> und die MySQL Client Library
      <literal>libmysqlclient</literal> verwenden unterschiedliche
      Netzwerk-APIs. So verwendet <literal>mysqlnd</literal> PHP-Streams,
      während <literal>libmysqlclient</literal> den eigenen Wrapper für die
      Netzwerkaufrufe der Betriebssystemebene verwendet. PHP setzt für das
      Lesen von Streams standardmäßig ein Zeitlimit von 60s. Dies wird in der
      <filename>php.ini</filename> über
      <literal>default_socket_timeout</literal> eingestellt. Diese Vorgabe
      gilt für alle Streams, die keinen anderen Wert für das Zeitlimit setzen.
      <literal>mysqlnd</literal> setzt keinen anderen Wert, weshalb
      Verbindungen von lang laufenden Abfragen nach
      <literal>default_socket_timeout</literal> Sekunden getrennt werden
      können, was die Fehlermeldung <quote>2006 - MySQL Server has gone
      away</quote> zur Folge hat. Die MySQL Client Library setzt standardmäßig
      ein Zeitlimit von 24 * 3600 Sekunden (1 Tag) und wartet auf andere
      Zeitlimits, &zb; TCP/IP-Zeitlimits. <literal>mysqlnd</literal> benutzt
      nun das gleiche sehr lange Zeitlimit. Der Wert ist über eine neue
      Einstellung in der <filename>php.ini</filename> konfigurierbar:
      <literal>mysqlnd.net_read_timeout</literal>.
      <literal>mysqlnd.net_read_timeout</literal> wird von jeder Erweiterung
      verwendet, die <literal>mysqlnd</literal> verwendet
      (<literal>ext/mysql</literal>, <literal>ext/mysqli</literal> und
      <literal>PDO_MySQL</literal>). <literal>mysqlnd</literal> weist
      PHP-Streams an, <literal>mysqlnd.net_read_timeout</literal> zu
      verwenden. Zu beachten ist, dass es subtile Unterschiede zwischen
      <literal>MYSQL_OPT_READ_TIMEOUT</literal> aus der MySQL Client Library
      und PHP-Streams geben kann. Zum Beispiel gilt
      <literal>MYSQL_OPT_READ_TIMEOUT</literal> laut Dokumentation nur für
      TCP/IP-Verbindungen und, vor MySQL 5.1.2, nur unter Windows. PHP-Streams
      haben diese Einschränkung möglicherweise nicht. Im Zweifelsfall sollte
      die Dokumentation von Streams zu Rate gezogen werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.net-cmd-buffer-size">
    <term>
     <parameter>mysqlnd.net_cmd_buffer_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      <literal>mysqlnd</literal> weist jeder Verbindung einen internen
      Befehls-/Netzwerkpuffer von
      <literal>mysqlnd.net_cmd_buffer_size</literal> Bytes zu (in der
      <filename>php.ini</filename>). Wenn ein Befehl des
      MySQL-Client-Server-Protokolls, zum Beispiel
      <literal>COM_QUERY</literal> (<quote>normale</quote> Abfrage), nicht in
      den Puffer passt, vergrößert <literal>mysqlnd</literal> den Puffer auf
      die für das Senden des Befehls erforderliche Größe. Jedes Mal, wenn der
      Puffer für eine Verbindung erweitert wird, wird
      <literal>command_buffer_too_small</literal> um eins erhöht.
     </para>
     <para>
      Wenn <literal>mysqlnd</literal> den Puffer bei fast jeder Verbindung
      über seine anfängliche Größe von
      <literal>mysqlnd.net_cmd_buffer_size</literal> Bytes hinaus vergrößern
      muss, sollten in Betracht gezogen werden, die Standardgröße zu erhöhen,
      um Neuzuweisungen zu vermeiden.
     </para>
     <para>
      Die voreingestellte Puffergröße beträgt 4096 Bytes, was der
      kleinstmögliche Wert ist.
     </para>
     <para>
      Der Wert kann auch mittels <literal>mysqli_options(link,
      MYSQLI_OPT_NET_CMD_BUFFER_SIZE, size)</literal> gesetzt werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.net-read-buffer-size">
    <term>
     <parameter>mysqlnd.net_read_buffer_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die maximale Größe des gelesenen Teilstücks in Bytes, wenn der Inhalt
      eines MySQL-Befehlspakets gelesen wird. Das
      MySQL-Client-Server-Protokoll kapselt alle seine Befehle in Paketen. Die
      Pakete bestehen aus einem kleinen Kopf und einem Textkörper mit dem
      eigentlichen Inhalt. Die Größe des Körpers ist im Kopfteil kodiert.
      <literal>mysqlnd</literal> liest den Körper in Stücken von
      <literal>MIN(header.size, mysqlnd.net_read_buffer_size)</literal> Bytes.
      Wenn ein Paketkörper größer als
      <literal>mysqlnd.net_read_buffer_size</literal> Bytes ist, muss
      <literal>mysqlnd</literal> den Befehl <literal>read()</literal> mehrfach
      aufrufen.
     </para>
     <para>
      Der Wert kann auch mittels <literal>mysqli_options(link,
      MYSQLI_OPT_NET_READ_BUFFER_SIZE, size)</literal> gesetzt werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.sha256-server-public-key">
    <term>
     <parameter>mysqlnd.sha256_server_public_key</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Diese Option bezieht sich auf das SHA-256-Authentifizierungs-Plugin und
      enthält den Pfad zur Datei mit dem öffentlichen RSA-Schlüssel des
      MySQL-Servers.
     </para>
     <para>
      Der Client kann entweder auf die Angabe eines öffentlichen
      RSA-Schlüssels verzichten, den Schlüssel über diese
      PHP-Konfigurationseinstellung angeben oder zur Laufzeit mittels
      <function>mysqli_options</function>. Wird vom Client kein öffentlicher
      RSA-Schlüssel angegeben, wird der Schlüssel im Rahmen des
      Standard-Authentifizierungsverfahrens des
      SHA-256-Authentifizierungs-Plugins ausgetauscht.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.trace-alloc">
    <term>
     <parameter>mysqlnd.trace_alloc</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.mysqlnd.fetch_data_copy">
    <term>
     <parameter>mysqlnd.fetch_data_copy</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Erzwingt das Kopieren von Ergebnismengen aus den internen
      Ergebnismengenpuffern in PHP-Variablen, anstatt die standardmäßige
      Referenz- und Copy-on-Write-Logik zu verwenden. Weitere Details sind in
      den Hinweisen zur
      <link linkend="mysqlnd.memory">Implementierung der Speicherverwaltung</link>
      zu finden.
     </para>
     <para>
      Wenn Ergebnismengen kopiert werden, anstatt sie von PHP-Variablen
      referenzieren zu lassen, kann der für die PHP-Variablen belegte Speicher
      früher freigegeben werden. Je nach API-Code des Benutzers, den
      tatsächlichen Datenbankabfragen und der Größe ihrer Ergebnismengen kann
      dies den Speicherbedarf von mysqlnd verringern.
     </para>
     <para>
      Dies darf nicht gesetzt werden, wenn PDO_MySQL verwendet wird. PDO_MySQL
      unterstützt diesen neuen Abrufmodus noch nicht.
     </para>
     <note>
      <simpara>
       Diese Einstellung wurde in PHP 8.1.0 entfernt.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
