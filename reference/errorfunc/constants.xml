<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Maintainer: hholzgra Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 1.0 Reviewer: samesch -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;
  <note>
   <simpara>
    Sie können diese Konstanten innerhalb von  &php.ini; benutzen, aber nicht
    außerhalb von PHP, wie etwa in der &httpd.conf;, wo Sie stattdessen die
    Werte der Bitmasken benutzen sollten.
   </simpara>
  </note>
 <table xml:id="errorfunc.constants.errorlevels">
  <title>Fehler und Meldungen</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Wert</entry>
     <entry>Konstante</entry>
     <entry>&Description;</entry>
     <entry>Bemerkung</entry>
    </row>
   </thead>
   <tbody>
    <row xml:id="constant.e-error">
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Fatale Laufzeit-Fehler. Dies zeigt Fehler an, die nicht behoben werden
      können. Beispielsweise Probleme bei der Speicherzuweisung. Die
      Ausführung des Skripts wird abgebrochen.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-warning">
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Warnungen (keine fatalen Fehler) zur Laufzeit des Skripts. Das Skript
      wird nicht abgebrochen.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-parse">
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Parser-Fehler während der Übersetzung. Parser-Fehler können nur vom
      Parser erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-notice">
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benachrichtigungen während der Laufzeit. Sie zeigen an, dass im Skript
      irgendetwas gefunden wurde, was einen Fehler verursachen könnte. Es ist
      aber genauso möglich, dass Benachrichtigungen im ordnungsgemäßen Ablauf
      eines Skripts ausgegeben werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-core-error">
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Fatale Fehler, die beim Starten von PHP auftreten. Diese sind
      ähnlich wie <constant>E_ERROR</constant>, nur dass diese
      Fehlermeldungen vom PHP-Kern erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-core-warning">
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Warnungen (keine fatalen Fehler), die beim Starten von PHP
      auftreten. Diese sind ähnlich wie <constant>E_WARNING</constant>,
      nur dass diese Warnungen vom PHP-Kern erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-compile-error">
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Fatale Fehler zur Übersetzungszeit. Diese sind ähnlich wie
      <constant>E_ERROR</constant>, nur dass diese Fehlermeldungen
      von der Zend Scripting Engine erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-compile-warning">
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Warnungen zur Übersetzungszeit. Diese sind ähnlich wie
      <constant>E_WARNING</constant>, nur dass diese Warnungen
      von der Zend Scripting Engine erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-user-error">
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benutzerdefinierte Fehlermeldungen. Diese sind ähnlich wie
      <constant>E_ERROR</constant>, nur dass diese Fehlermeldungen
      im PHP-Code mit <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-user-warning">
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benutzerdefinierte Warnungen. Diese sind ähnlich wie
      <constant>E_WARNING</constant>, nur dass diese Warnungen im PHP-Code mit
      <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-user-notice">
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benutzerdefinierte Benachrichtigungen. Diese sind ähnlich wie
      <constant>E_NOTICE</constant>, nur dass diese Benachrichtigungen im
      PHP-Code mit <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-strict">
     <entry>2048</entry>
     <entry>
      <constant>E_STRICT</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Aktivieren Sie diese Einstellung, um von PHP Vorschläge für Änderungen
      des Programmcodes zu erhalten, die eine bestmögliche Interoperabilität
      und zukünftige Kompatibilität Ihres Codes gewährleisten.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-recoverable-error">
     <entry>4096</entry>
     <entry>
      <constant>E_RECOVERABLE_ERROR</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Abfangbarer fataler Fehler. Dies bedeutet das ein potentiell
      gefährlicher Fehler aufgetreten ist, die Engine aber nicht in einem
      instabilen Zustand hinterlassen hat. Wird der Fehler nicht durch eine
      benutzerdefinierte Fehlerbehandlungsroutine abgefangen (siehe auch
      <function>set_error_handler</function>), so wird die Anwendung wie bei
      einem Fehler der Stufe <constant>E_ERROR</constant> abgebrochen.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-deprecated">
     <entry>8192</entry>
     <entry>
      <constant>E_DEPRECATED</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benachrichtigungen zur Laufzeit des Programms. Aktivieren Sie diese
      Einstellung, um Warnungen über Codebestandteile zu erhalten, die in
      zukünftigen PHP-Versionen nicht mehr funktionieren werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-user-deprecated">
     <entry>16384</entry>
     <entry>
      <constant>E_USER_DEPRECATED</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Benutzererzeugte Warnmeldung. Diese entspricht
      <constant>E_DEPRECATED</constant>, mit der Ausnahme, dass sie im
      PHP-Code durch die Verwendung der Funktion
      <function>trigger_error</function> generiert wurde.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="constant.e-all">
     <entry>32767</entry>
     <entry>
      <constant>E_ALL</constant>
      (<type>int</type>)
     </entry>
     <entry>
      Alle Fehler, Warnungen und Benachrichtigungen.
     </entry>
     <entry></entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  Mit den obengennnten Werten (sowohl numerisch als auch mit den Konstanten)
  wird eine Bitmaske erzeugt, die festlegt, welche Fehler angezeigt werden
  sollen. Mit den
  <link linkend="language.operators.bitwise">Bit-Operatoren</link> können Sie
  diese Werte kombinieren oder bestimmte Fehlertypen ausblenden. Beachten Sie,
  dass innerhalb von &php.ini; jedoch nur '|', '~', '!', '^' und '&amp;'
  verstanden werden.
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
