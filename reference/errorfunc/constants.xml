<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4c9b6ff9fbc0b2516d21a3f82ad36b91ea1d0aa4 Maintainer: hholzgra Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Reviewer: samesch -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <simpara>
  Die folgenden Konstanten (entweder die entsprechenden numerischen Werte oder
  ihre symbolischen Namen) werden als Bitmasken verwendet, um anzugeben, welche
  Fehler gemeldet werden sollen. Es ist möglich, diese Werte mit den
  <link linkend="language.operators.bitwise">Bit-Operatoren</link> zu
  kombinieren oder bestimmte Fehlertypen auszublenden.
 </simpara>

 <tip>
  <simpara>
   In der &php.ini; können die Namen der Konstanten anstelle der reinen
   numerischen Werte, denen sie entsprechen, verwendet werden.
   Innerhalb der &php.ini; werden jedoch nur die Operatoren
   <literal>|</literal>,
   <literal>~</literal>,
   <literal>^</literal>,
   <literal>!</literal> und
   <literal>&amp;</literal>
   verstanden.
  </simpara>
 </tip>

 <warning>
  <simpara>
   Es ist nicht möglich, die symbolischen Namen außerhalb von PHP zu verwenden.
   Zum Beispiel muss in der &httpd.conf; stattdessen der berechnete Wert der
   Bitmaske verwendet werden.
  </simpara>
 </warning>

 <variablelist xml:id="errorfunc.constants.errorlevels">
  <varlistentry xml:id="constant.e-error">
   <term>
    <constant>E_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fatale Laufzeit-Fehler.
     Dies zeigt Fehler an, die nicht behoben werden können,
     &zb; Probleme bei der Speicherzuweisung.
     Die Ausführung des Skripts wird abgebrochen.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>1</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-warning">
   <term>
    <constant>E_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Warnungen (nicht-fatale Fehler) zur Laufzeit des Skripts.
     Die Ausführung des Skripts wird nicht abgebrochen.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>2</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-parse">
   <term>
    <constant>E_PARSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Parser-Fehler während der Übersetzung.
     Parser-Fehler können nur vom Parser erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>4</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-notice">
   <term>
    <constant>E_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benachrichtigungen während der Laufzeit. Sie zeigen an, dass im Skript
     irgendetwas gefunden wurde, was einen Fehler verursachen könnte. Es ist
     aber genauso möglich, dass Benachrichtigungen im ordnungsgemäßen Ablauf
     eines Skripts ausgegeben werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>8</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-error">
   <term>
    <constant>E_CORE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fatale Fehler, die beim Starten von PHP auftreten.
     Dies ist ähnlich wie <constant>E_ERROR</constant>, nur dass diese
     Fehlermeldungen vom PHP-Kern erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>16</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-warning">
   <term>
    <constant>E_CORE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Warnungen (nicht-fatale Fehler), die beim Starten von PHP auftreten.
     Dies ist ähnlich wie <constant>E_WARNING</constant>, nur dass diese
     Warnungen vom PHP-Kern erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>32</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-error">
   <term>
    <constant>E_COMPILE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fatale Fehler zur Übersetzungszeit.
     Dies ist ähnlich wie <constant>E_ERROR</constant>, nur dass diese
     Fehlermeldungen von der Zend-Scripting-Engine erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>64</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-warning">
   <term>
    <constant>E_COMPILE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Warnungen (nicht-fatale Fehler) zur Übersetzungszeit.
     Dies ist ähnlich wie <constant>E_WARNING</constant>, nur dass diese
     Warnungen von der Zend Scripting Engine erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>128</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-deprecated">
   <term>
    <constant>E_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benachrichtigungen über veralteten Code zur Laufzeit.
     Wenn diese Option aktiviert ist, werden Warnungen über Code ausgegeben,
     der in zukünftigen Versionen nicht mehr funktionieren wird.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>8192</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-error">
   <term>
    <constant>E_USER_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benutzerdefinierte Fehlermeldungen.
     Dies ist ähnlich wie <constant>E_ERROR</constant>, nur dass diese
     Fehlermeldungen im PHP-Code mit <function>trigger_error</function> erzeugt
     werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>256</literal>
    </simpara>
    <warning>
     <simpara>
      Die Verwendung dieser Konstante mit <function>trigger_error</function>
      ist seit PHP 8.4.0 veraltet.
      Es wird empfohlen, entweder eine <exceptionname>Exception</exceptionname>
      zu werfen oder stattdessen <function>exit</function> aufzurufen.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-warning">
   <term>
    <constant>E_USER_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benutzerdefinierte Warnungen.
     Dies ist ähnlich wie <constant>E_WARNING</constant>, nur dass diese
     Warnungen im PHP-Code mit <function>trigger_error</function> erzeugt
     werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>512</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-notice">
   <term>
    <constant>E_USER_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benutzerdefinierte Benachrichtigungen.
     Dies ist ähnlich wie <constant>E_NOTICE</constant>, nur dass diese
     Benachrichtigungen im PHP-Code mit <function>trigger_error</function>
     erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>1024</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-deprecated">
   <term>
    <constant>E_USER_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Benutzerdefinierte Warnmeldung über veralteten Code.
     Dies entspricht <constant>E_DEPRECATED</constant>, nur dass diese
     Benachrichtigungen im PHP-Code mit <function>trigger_error</function>
     erzeugt werden.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>16384</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-strict">
   <term>
    <constant>E_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Vorschläge, die PHP zur Laufzeit über den ausgeführten Code ausgibt, um
     die Aufwärtskompatibilität zu gewährleisten.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>2048</literal>
    </simpara>
    <warning>
     <simpara>
      Diese Stufe der Fehlermeldungen wird nicht mehr verwendet und ist seit
      PHP 8.4.0 veraltet.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-recoverable-error">
   <term>
    <constant>E_RECOVERABLE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     "Exceptions" der Legacy-Engine, die einem abfangbaren fatalen Fehler
     entsprechen.
     Ähnlich wie <exceptionname>Error</exceptionname>, aber sie müssen von
     einem benutzerdefinierten Fehlerhandler abgefangen werden (siehe
     <function>set_error_handler</function>).
     Wenn ein solcher Fehler nicht abgefangen wird, verhält er sich wie
     <constant>E_ERROR</constant>.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>4096</literal>
    </simpara>
    <note>
     <simpara>
      Diese Stufe von Fehlermeldungen wird praktisch nicht verwendet. Der
      einzige Fall, in dem sie auftreten kann, ist, wenn die Interpretation
      eines &object;s als <type>bool</type> fehlschlägt.
      Dies kann nur bei internen Objekten vorkommen.
     </simpara>
     <simpara>
      Das häufigste Beispiel vor PHP 8.4.0 ist die Verwendung einer
      <classname>GMP</classname>-Instanz in einer Bedingung.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-all">
   <term>
    <constant>E_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Eine Bitmaske, die alle Fehler, Warnungen und Hinweise enthält.
    </simpara>
    <simpara>
     Wert der Konstante: <literal>30719</literal>
    </simpara>
    <warning>
     <simpara>
      Vor PHP 8.4 war der Wert der Konstante <literal>32767</literal>
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
