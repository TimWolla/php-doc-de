<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a124543dd3f6b1e5567b07420d23899e582514dc Maintainer: fa Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 24ea750d479d4992705bfb11bd3be4a388c7c13f Reviewer: samesch -->
<refentry xml:id="function.debug-backtrace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>debug_backtrace</refname>
  <refpurpose>Erzeugt eine Ablaufverfolgung</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>debug_backtrace</methodname>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer><constant>DEBUG_BACKTRACE_PROVIDE_OBJECT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>debug_backtrace</function> erzeugt eine PHP-Ablaufverfolgung.
  </para>
 </refsect1>

 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Dieser Parameter ist eine Bitmaske für die folgenden Optionen:
       <table>
        <title><function>debug_backtrace</function>-Optionen</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>DEBUG_BACKTRACE_PROVIDE_OBJECT</entry>
           <entry>
            Legt fest, ob der "object"-Index befüllt werden soll.
           </entry>
          </row>
          <row>
           <entry>DEBUG_BACKTRACE_IGNORE_ARGS</entry>
           <entry>
            Legt fest, ob der "args"-Index, welcher alle Funktions- oder
            Methodenargumente enthält, ausgelassen werden soll, um
            Arbeitsspeicher zu sparen.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
       <note>
        <para>
         Es gibt vier mögliche Kombinationen:
         <table>
          <title><function>debug_backtrace</function>-Optionen</title>
          <tgroup cols="2">
           <tbody>
            <row>
             <entry><code>debug_backtrace()</code></entry>
             <entry morerows="2" valign="middle">
              Füllt beide Indizes
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(1)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(0)</code></entry>
             <entry valign="middle">
              Lässt den Index <literal>"object"</literal> weg und belegt den
              Index <literal>"args"</literal>.
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS)</code></entry>
             <entry morerows="1" valign="middle">
              Lässt die Indizes <literal>"object"</literal>
              <emphasis>und</emphasis> <literal>"args"</literal> weg.
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(2)</code></entry>
            </row>
            <row>
             <entry><code>debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT|DEBUG_BACKTRACE_IGNORE_ARGS)</code></entry>
             <entry morerows="1" valign="middle">
              Belegt den Index <literal>"object"</literal>
              <emphasis>und</emphasis> lässt den Index
              <literal>"args"</literal> weg.
             </entry>
            </row>
            <row>
             <entry><code>debug_backtrace(3)</code></entry>
            </row>
           </tbody>
          </tgroup>
         </table>
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Dieser Parameter kann benutzt werden, um die Anzahl an zurückgegebenen
       Stackframes zu limitieren. Standardmäßig
       (<parameter>limit</parameter>=<literal>0</literal>) werden alle
       Stackframes zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives <type>Array</type> zurück. Als zurückgegebene
   Arrayelemente von <function>debug_backtrace</function> sind möglich:
  </para>
  <para>
   <table>
    <title>Mögliche Rückgabewerte von <function>debug_backtrace</function></title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Type;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>function</entry>
       <entry><type>string</type></entry>
       <entry>
        Der Name der aktuell ausgeführten Funktion. Siehe auch
        <link linkend="language.constants.magic">__FUNCTION__</link>.
       </entry>
      </row>
      <row>
       <entry>line</entry>
       <entry><type>int</type></entry>
       <entry>
        Die aktuelle Zeilennummer. Siehe auch
        <link linkend="language.constants.magic">__LINE__</link>.
       </entry>
      </row>
      <row>
       <entry>file</entry>
       <entry><type>string</type></entry>
       <entry>
        Der aktuelle Dateiname. Siehe auch
        <link linkend="language.constants.magic">__FILE__</link>.
       </entry>
      </row>
      <row>
       <entry>class</entry>
       <entry><type>string</type></entry>
       <entry>
        Der aktuelle Name der <link linkend="language.oop5">Klasse</link>.
        Siehe auch <link linkend="language.constants.magic">__CLASS__</link>.
       </entry>
      </row>
      <row>
       <entry>object</entry>
       <entry><type>object</type></entry>
       <entry>
        Das aktuelle <link linkend="language.oop5">Objekt</link>.
       </entry>
      </row>
      <row>
       <entry>type</entry>
       <entry><type>string</type></entry>
       <entry>
        Der aktuelle Typ des Aufrufs. Falls der Aufruf in einer Methode
        erfolgte, wird "-&gt;" zurückgegeben. Falls der Aufruf aus einer
        statischen Funktion erfolgte, wird "::" zurückgegeben, und falls der
        Aufruf aus einer Funktion erfolgte, wird nichts zurückgegeben.
       </entry>
      </row>
      <row>
       <entry>args</entry>
       <entry><type>array</type></entry>
       <entry>
        Falls der Aufruf aus einer Funktion erfolgte, werden hier die
        Funktionsargumente aufgelistet. Falls der Aufruf aus einer
        eingebundenen Datei erfolgte, werden die Namen der
        Include-Dateien angegeben.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>debug_backtrace</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Dateiname: /tmp/a.php

function a_test($str)
{
    echo "\nHi: $str";
    var_dump(debug_backtrace());
}

a_test('friend');
?>

<?php
// Dateiname: /tmp/b.php
include_once '/tmp/a.php';
?>
]]>
    </programlisting>
    <para>
     Ähnliche Ergebnisse wie die folgenden beim Aufruf von
     <filename>/tmp/b.php</filename>:
    </para>
    <screen>
<![CDATA[
Hi: friend
array(2) {
[0]=>
array(4) {
    ["file"] => string(10) "/tmp/a.php"
    ["line"] => int(10)
    ["function"] => string(6) "a_test"
    ["args"]=>
    array(1) {
      [0] => &string(6) "friend"
    }
}
[1]=>
array(4) {
    ["file"] => string(10) "/tmp/b.php"
    ["line"] => int(2)
    ["args"] =>
    array(1) {
      [0] => string(10) "/tmp/a.php"
    }
    ["function"] => string(12) "include_once"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>trigger_error</function></member>
    <member><function>debug_print_backtrace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
