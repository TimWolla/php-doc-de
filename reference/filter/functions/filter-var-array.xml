<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 53054bf8decc8648cf2e90a493692a161e2371af Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Reviewer: samesch -->
<refentry xml:id="function.filter-var-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_var_array</refname>
  <refpurpose>Nimmt mehrere Variablen entgegen und filtert sie optional</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type><type>null</type></type><methodname>filter_var_array</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>add_empty</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Filtert ein assoziatives &array; von Werten unter Verwendung von
   <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>-Validierungsfiltern,
   <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>-Bereinigungsfiltern
   oder benutzerdefinierten Filtern.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>array</parameter></term>
    <listitem>
     <para>
      Ein assoziatives &array;, das die zu filternden Daten enthält.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     <simpara>
      Entweder ein assoziatives <type>array</type> von Optionen oder der
      Filter, der auf jeden Eintrag angewendet werden soll. Dies kann entweder
      ein Validierungsfilter sein, der eine der
      <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>-Konstanten
      verwendet, oder ein Bereinigungsfilter, der eine der
      <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>-Konstanten
      verwendet.
     </simpara>
     <simpara>
      Das Options-Array ist ein assoziatives Array, bei dem der Schlüssel einem
      Schlüssel im Daten-<parameter>Array</parameter> entspricht und der
      zugehörige Wert entweder der Filter ist, der auf diesen Eintrag
      angewendet werden soll, oder ein assoziatives Array, das beschreibt, wie
      und welcher Filter auf diesen Eintrag angewendet werden soll.
     </simpara>
     <simpara>
      Das assoziative Array, das beschreibt, wie ein Filter anzuwenden ist,
      muss den Schlüssel <literal>'filter'</literal> enthalten, dessen
      zugehöriger Wert der anzuwendende Filter ist, der eine der Konstanten
      <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>,
      <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>,
      <constant>FILTER_UNSAFE_RAW</constant> oder
      <constant>FILTER_CALLBACK</constant> sein kann.
      Es kann optional den Schlüssel <literal>'flags'</literal> enthalten, der
      alle für den Filter geltenden Flags angibt, und den Schlüssel
      <literal>'options'</literal>, der alle für den Filter geltenden Optionen
      angibt.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>add_empty</parameter></term>
    <listitem>
     <para>
      Nicht vorhandene Schlüssel als &null; zum Rückgabewert hinzufügen.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bei Erfolg wird ein Array zurückgegeben, das alle Werte der angefragten
   Variablen enthält, oder &false; im Fehlerfall. Ein einzelner Array-Wert ist
   &false;, wenn das Filtern fehlgeschlagen ist oder &null;, wenn die Variable
   nicht gesetzt ist.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>filter_var_array</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

$data = [
    'product_id' => 'libgd<script>',
    'component'  => '10',
    'versions'   => '2.0.33',
    'testscalar' => ['2', '23', '10', '12'],
    'testarray'  => '2',
];

$filters = [
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => [
        'filter'   => FILTER_VALIDATE_INT,
        'flags'    => FILTER_FORCE_ARRAY,
        'options'  => [
            'min_range' => 1,
            'max_range' => 10,
        ],
    ],
    'versions'     => [
        'filter' => FILTER_SANITIZE_ENCODED
    ],
    'testscalar'   => [
        'filter' => FILTER_VALIDATE_INT,
        'flags'  => FILTER_REQUIRE_SCALAR,
    ],
    'testarray'    => [
        'filter' => FILTER_VALIDATE_INT,
        'flags'  => FILTER_FORCE_ARRAY,
    ],
    'doesnotexist' => FILTER_VALIDATE_INT,
];

var_dump(filter_var_array($data, $filters));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(6) {
  ["product_id"]=>
  string(17) "libgd%3Cscript%3E"
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["versions"]=>
  string(6) "2.0.33"
  ["testscalar"]=>
  bool(false)
  ["testarray"]=>
  array(1) {
    [0]=>
    int(2)
  }
  ["doesnotexist"]=>
  NULL
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>filter_input_array</function></member>
   <member><function>filter_var</function></member>
   <member><function>filter_input</function></member>
   <member>
    Validierungsfilter
    <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>
   </member>
   <member>
    Bereinigungsfilter
    <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
