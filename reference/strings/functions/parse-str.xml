<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: da15b6674ac1900c7d065bd746a04b53d7e963bf Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 9d2b858bca85edbeebb83f05a1cd2e87cf90127d Reviewer: samesch -->
<refentry xml:id="function.parse-str" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>parse_str</refname>
  <refpurpose>Verarbeitet einen String als Abfrage-String einer URL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>parse_str</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">result</parameter></methodparam>
  </methodsynopsis>
  <para>
   Verarbeitet <parameter>string</parameter>, als ob er der Query-String einer
   URL-Übergabe via GET wäre, und setzt Schlüssel im angegebenen Array
   <parameter>result</parameter>. Wenn kein
   <parameter>result</parameter> übergeben wurde, werden die Werte stattdessen
   als Variablen im aktuellen Geltungsbereich gesetzt.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die Eingabezeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Eine per Referenz übergebene Variable, die auf ein Array gesetzt wird,
       das die aus <parameter>string</parameter> extrahierten
       Schlüssel-Wert-Paare enthält.
       Wenn der Parameter <parameter>result</parameter> nicht übergeben wird,
       wird für jeden Schlüssel eine eigene Variable im lokalen Geltungsbereich
       gesetzt.
      </para>
      <warning>
       <para>
        Diese Funktion ohne den zweiten Parameter zu verwenden wird von
        PHP 7.2 an <emphasis>MISSBILLIGT</emphasis> und es wird dringend davon
        <emphasis>ABGERATEN</emphasis>. Von PHP 8.0.0 an ist der Parameter
        <parameter>result</parameter> <emphasis>zwingend erforderlich</emphasis>.
       </para>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>result</parameter> ist nicht mehr optional.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Die Verwendung von <function>parse_str</function> ohne den zweiten
        Parameter erzeugt nun einen <constant>E_DEPRECATED</constant>-Fehler.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Der Gebrauch von <function>parse_str</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "erstes=wert&arr[]=foo+bar&arr[]=baz";

// Empfohlen
parse_str($str, $output);
echo $output['erstes'], PHP_EOL; // value
echo $output['arr'][0], PHP_EOL; // foo bar
echo $output['arr'][1], PHP_EOL; // baz
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Bei der Erstellung von Array-Schlüsseln oder lokalen Variablen werden alle
   Leerzeichen und Punkte in Parameternamen in Unterstriche umgewandelt.
   Dies liegt daran, dass Variablennamen in PHP keine Leerzeichen oder Punkte
   enthalten dürfen. Das gilt auch, wenn diese Funktion mit dem empfohlenen
   Parameter <parameter>result</parameter> verwendet wird.
   <example>
    <title><function>parse_str</function>-Namens-Manipulation</title>
    <programlisting role="php">
<![CDATA[
<?php
parse_str("Mein Wert=Etwas", $output);
echo $output['Mein_Wert']; // Etwas
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>parse_str</function> wird durch die Direktive
    <link linkend="ini.max-input-vars">max_input_vars</link> beeinflusst. Das
    Überschreiten dieser Grenze löst ein
    <constant>E_WARNING</constant> aus und alle Variablen, die über diese
    Grenze hinausgehen, werden nicht zum Ergebnisarray hinzugefügt.
    Der Standardwert ist 1000;
    <link linkend="ini.max-input-vars">max_input_vars</link> kann nach Bedarf
    angepasst werden.
   </para>
  </note>
  <note>
   <para>
    Alle Werte, die in das Array <parameter>result</parameter> eingetragen
    werden (oder Variablen, die erstellt werden, wenn der zweite Parameter
    nicht gesetzt ist), sind bereits URL-dekodiert. Dabei gelten die gleichen
    Regeln wie bei <function>urldecode</function>.
   </para>
  </note>
  <note>
   <para>
    Um auf den Query-String der aktuellen Anfrage zuzugreifen, kann die
    Variable <varname>$_SERVER['QUERY_STRING']</varname> verwendet werden.
    Weitere Informationen finden sich auch im Abschnitt
    <link linkend="language.variables.external">Variablen aus externen Quellen</link>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_url</function></member>
    <member><function>pathinfo</function></member>
    <member><function>http_build_query</function></member>
    <member><function>urldecode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
