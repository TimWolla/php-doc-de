<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a3573c18b89fd32aca1c3924d3fd9568900b4a33 Reviewer: samesch -->
<refentry xml:id="function.substr-compare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_compare</refname>
  <refpurpose>
   Binärsicherer Vergleich zweier Strings, beginnend an einer bestimmten
   Position und endend nach einer festgelegten Länge
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>substr_compare</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_compare</function> vergleicht <parameter>haystack</parameter>
   ab der in <parameter>offset</parameter> definierten Position mit
   <parameter>needle</parameter>. Die Länge des verglichenen String-Bestandteils
   wird vom Parameter <parameter>length</parameter> bestimmt.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       Die zu vergleichende Hauptzeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       Die zweite zu vergleichende Zeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Die Anfangsposition für den Vergleich. Wenn der Wert negativ ist, wird
       rückwärts vom Ende der Zeichenkette an gezählt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Die Länge der zu vergleichenden Zeichensequenz. Standardwert ist der
       größere Wert des Vergleiches der Länge von
       <parameter>needle</parameter> mit der Länge von
       <parameter>haystack</parameter> minus <parameter>offset</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitive</parameter></term>
     <listitem>
      <para>
       Wenn <parameter>case_insensitive</parameter> den Wert &true; hat,
       wird der Vergleich ohne Berücksichtigung der Groß- und Kleinschreibung
       durchgeführt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  &strings.comparison.return;
  <para>
   Wenn <parameter>offset</parameter> gleich (vor PHP 7.2.18, 7.3.5) oder
   größer als die Länge von <parameter>haystack</parameter> ist oder
   <parameter>length</parameter> gesetzt und kleiner als 0 ist, gibt
   <function>substr_compare</function> eine Warnung aus und hat den
   Rückgabewert &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &standard.changelog.binary-safe-string-comparison;
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> ist nun nullable (akzeptiert den
        &null;-Wert).
       </entry>
      </row>
      <row>
       <entry>7.2.18, 7.3.5</entry>
       <entry>
        <parameter>offset</parameter> kann nun gleich der Länge von
        <parameter>haystack</parameter> sein.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein <function>substr_compare</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr_compare("abcde", "bc", 1, 2), PHP_EOL; // 0
echo substr_compare("abcde", "de", -2, 2), PHP_EOL; // 0
echo substr_compare("abcde", "bcg", 1, 2), PHP_EOL; // 0
echo substr_compare("abcde", "BC", 1, 2, true), PHP_EOL; // 0
echo substr_compare("abcde", "bc", 1, 3), PHP_EOL; // 1
echo substr_compare("abcde", "cd", 1, 2), PHP_EOL; // -1
echo substr_compare("abcde", "abc", 5, 1), PHP_EOL; // -1
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strncmp</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
