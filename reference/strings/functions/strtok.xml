<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: d335ba69a16f4013280de8e3e71d9ba19fe3cb3c Reviewer: samesch -->
<refentry xml:id="function.strtok" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtok</refname>
  <refpurpose>Zerlegt einen String</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Alternative Signatur (benannte Parameter werden nicht unterstützt):
  </simpara>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>strtok</function> zerlegt den String
   <parameter>string</parameter> in kürzere Strings (Token), wobei jeder Token
   durch ein beliebiges Zeichen aus <parameter>token</parameter> getrennt
   wird. Das bedeutet, wenn Sie einen String wie "Dies ist ein
   Beispiel-String" haben, können Sie ihn in seine einzelnen Worte zerlegen,
   indem Sie das Leerzeichen als <parameter>token</parameter> verwenden.
  </para>
  <para>
   Beachten Sie, dass nur der erste Aufruf von strtok das
   <parameter>string</parameter>-Argument verwendet. Jeder Folgeaufruf von
   strtok benötigt nur den zu beachtenden <parameter>token</parameter>, um
   herauszufinden, wo sich diese im aktuellen String befinden. Um neu zu
   beginnen oder einen neuen String zu zerlegen, müssen Sie nur erneut strtok
   mit dem <parameter>string</parameter>-Parameter aufrufen, damit die
   Funktion neu initialisiert wird. Beachten Sie, dass Sie mehrere Token im
   <parameter>token</parameter>-Parameter angeben können. Der String wird dann
   an jeder Stelle zerlegt, an der eines der im
   <parameter>token</parameter>-Argument angegebenen Zeichen gefunden wird.
  </para>
  <note>
   <para>
    Diese Funktion verhält sich etwas anders, als man es vielleicht erwartet,
    wenn man mit <function>explode</function> vertraut ist. Zunächst wird eine
    Folge von zwei oder mehr zusammenhängenden
    <parameter>token</parameter>-Zeichen in der ausgewerteten Zeichenkette als
    ein einzelnes Trennzeichen betrachtet. Außerdem wird ein
    <parameter>token</parameter>, das sich am Anfang oder Ende der
    Zeichenkette befindet, ignoriert. Wenn zum Beispiel eine Zeichenkette
    <literal>";aaa;;bbb;"</literal> verwendet wird, würden aufeinanderfolgende
    Aufrufe von <function>strtok</function> mit <literal>";"</literal> als
    <parameter>token</parameter> die Zeichenketten "aaa" und "bbb" und dann
    &false; zurückgeben. Als Ergebnis wird die Zeichenkette in nur zwei
    Elemente aufgeteilt, während <literal>explode(";", $string)</literal> ein
    Array mit 5 Elementen zurückgeben würde.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Der <type>&string;</type>, der in kleinere Zeichenketten (Token) zerlegt
       werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>token</parameter></term>
     <listitem>
      <para>
       Die Trennzeichen, die auf <parameter>string</parameter> angewendet
       werden sollen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Der aktuelle <type>&string;</type>-Token oder &false;, falls keine weiteren
   Token mehr vorhanden sind.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        Wenn <parameter>token</parameter> nicht angegeben wurde, wird nun ein
        Fehler der Stufe <constant>E_WARNING</constant> ausgegeben.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strtok</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = "Dies ist\tein Beispiel-\nString";
/* Sowohl das Tabulator- als auch das Newline-Zeichen werden
   zusätzlich zum Leerzeichen als Token zum Zerlegen verwendet */
$tok = strtok($string, " \n\t");

while ($tok !== false) {
    echo "Wort={$tok}\n";
    $tok = strtok(" \n\t");
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Verhalten von <function>strtok</function> beim Auffinden eines leeren Teils</title>
    <programlisting role="php">
<![CDATA[
<?php
$erster_token  = strtok('/irgendetwas', '/');
$zweiter_token = strtok('/');
var_dump($erster_token, $zweiter_token);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    string(11) "irgendetwas"
    bool(false)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Der Unterschied zwischen <function>strtok</function> und <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = ";aaa;;bbb;";

$parts = [];
$tok = strtok($string, ";");
while ($tok !== false) {
    $parts[] = $tok;
    $tok = strtok(";");
}
echo json_encode($parts),"\n";

$parts = explode(";", $string);
echo json_encode($parts),"\n";
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
["aaa","bbb"]
["","aaa","","bbb",""]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &return.falseproblem;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>explode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
