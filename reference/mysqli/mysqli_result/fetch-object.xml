<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c5ccd084c8f830801a939bf1829ddddcaf019730 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-result.fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_object</refname>
  <refname>mysqli_fetch_object</refname>
  <refpurpose>Liefert die nächste Zeile einer Ergebnismenge als Objekt</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli_result">
   <modifier>public</modifier> <type class="union"><type>object</type><type>null</type><type>false</type></type><methodname>mysqli_result::fetch_object</methodname>
   <methodparam choice="opt"><type>string</type><parameter>class</parameter><initializer>"stdClass"</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>constructor_args</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>object</type><type>null</type><type>false</type></type><methodname>mysqli_fetch_object</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class</parameter><initializer>"stdClass"</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>constructor_args</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ruft eine Zeile aus der Ergebnismenge ab und gibt sie als Objekt zurück,
   wobei die Eigenschaften die Namen der Spalten der Ergebnismenge darstellen.
   Jeder nachfolgende Aufruf dieser Funktion gibt die nächste Zeile der
   Ergebnismenge zurück oder &null;, wenn es keine weitere Zeile gibt.
  </para>
  <para>
   Wenn zwei oder mehr Spalten des Ergebnisses den gleichen Namen haben, hat
   die letzte Spalte Vorrang und überschreibt alle vorherigen Daten. Um auf
   mehrere Spalten mit demselben Namen zuzugreifen, kann die Funktion
   <function>mysqli_fetch_row</function> verwendet werden, um ein numerisch
   indiziertes Array abzurufen, oder es können Aliase in der Select-Liste der
   SQL-Abfrage verwendet werden, um den Spalten unterschiedliche Namen zu
   geben.
  </para>
  <note xmlns="http://docbook.org/ns/docbook">
   <simpara>
    Diese Funktion legt die Eigenschaften des Objekts fest, bevor sie den
    Konstruktor des Objekts aufruft.
   </simpara>
  </note>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>class</parameter></term>
     <listitem>
      <para>
       Der Name der Klasse, die instanziiert, mit ihren Eigenschaften versehen
       und zurückgegeben werden soll. Wenn nicht angegeben, wird ein
       <classname>stdClass</classname>-Objekt zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>constructor_args</parameter></term>
     <listitem>
      <para>
       Ein optionales <type>Array</type> von Parametern, das an den
       Konstruktor des Objekts <parameter>class</parameter> übergeben werden
       soll.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Objekt zurück, das die abgerufene Zeile enthält, wobei die
   Eigenschaften die Namen der Spalten der Ergebnismenge angeben, oder &null;,
   wenn es keine weitere Zeile in der Ergebnismenge gibt.
   &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn <parameter>constructor_args</parameter> nicht leer ist, die Klasse
   aber keinen Konstruktor hat, wird ein <classname>ValueError</classname>
   geworfen.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Wenn <parameter>constructor_args</parameter> nicht leer ist, die Klasse
       aber keinen Konstruktor hat, wird nun ein
       <classname>ValueError</classname> geworfen; zuvor wurde eine
       <classname>Exception</classname> geworfen.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Der Parameter <parameter>constructor_args</parameter> akzeptiert bei
       Konstruktoren mit 0 Parametern nun <literal>[]</literal>; zuvor wurde
       eine Exception geworfen.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli_result::fetch_object</methodname>-Beispiel</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID DESC";

$result = $mysqli->query($query);

while ($obj = $result->fetch_object()) {
    printf("%s (%s)\n", $obj->Name, $obj->CountryCode);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID DESC";

$result = mysqli_query($link, $query);

while ($obj = mysqli_fetch_object($result)) {
    printf("%s (%s)\n", $obj->Name, $obj->CountryCode);
}
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Pueblo (USA)
Arvada (USA)
Cape Coral (USA)
Green Bay (USA)
Santa Clara (USA)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_array</function></member>
    <member><function>mysqli_fetch_assoc</function></member>
    <member><function>mysqli_fetch_column</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
