<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1116af46680f7baf89c46610430a3b63ce9a1f0 Maintainer: hholzgra Status: ready -->
<!-- Reviewed: no -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Konfigurationsoptionen für PHP-Optionen/Info</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.assert.active">assert.active</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Seit PHP 8.3.0 veraltet.
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Seit PHP 8.3.0 veraltet.
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Seit PHP 8.3.0 veraltet.
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Seit PHP 8.3.0 veraltet.
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Entfernt in PHP 8.0.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Vor PHP 8.0.0 war der Standardwert <literal>"0"</literal>
       Seit PHP 8.3.0 veraltet.
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>&removed.php.future;</entry>
     </row>
     <row>
      <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
      <entry>"30"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
      <entry>"-1"</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
      <entry>"64"</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
      <entry>1000</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Verfügbar seit PHP 8.3.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Verfügbar seit PHP 8.3.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.fiber.stack-size">fiber.stack_size</link></entry>
      <entry></entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Verfügbar seit PHP 8.1.0.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Aktiviert die <function>assert</function>-Auswertung. Um das Verhalten
      von <function>assert</function> zu kontrollieren, sollte stattdessen
      <link linkend="ini.zend.assertions">zend.assertions</link> verwendet
      werden.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Beendet bei fehlgeschlagener Assertion die Ausführung eines Skripts.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Erzeugt bei jeder fehlgeschlagenen Assertion eine PHP-Warnung.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Eine benutzerdefinierte Funktion, die bei fehlgeschlagenen Assertions
      ausgeführt wird.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      Verwendet während der Auswertung eines Assertion-Ausdrucks die aktuelle
      Einstellung von <function>error_reporting</function>. Ist diese
      Einstellung aktiviert, werden während der Auswertung keine Fehler
      angezeigt (implizit error_reporting(0)). Falls deaktiviert, werden
      Fehler entsprechend der Einstellung von
      <function>error_reporting</function> angezeigt.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Erzeugt eine <classname>AssertionError</classname>-Exception für die
      fehlgeschlagene Assertion.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
     <parameter>enable_dl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Mit dieser Direktive kann das dynamische Laden von PHP-Erweiterungen
      mittels <function>dl</function> ein- und ausgeschaltet werden.
     </para>
     <para>
      Der Hauptgrund, das dynmische Laden abzustellen, sind
      Sicherheitsüberlegungen. Mit dem dynamischen Laden ist es möglich, alle
      <link linkend="ini.open-basedir">open_basedir</link>-Einschränkungen zu
      umgehen. Der Standardwert ist, das dynamische Laden zuzulassen.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Legt die maximale Zeit in Sekunden fest, die ein Skript laufen darf,
      bevor der Parser die Ausführung stoppt. Diese Einstellung hilft zu
      verhindern, dass schlampig geschriebene Skripte Ihren Server lahmlegen.
      Der Standardwert für diese Einstellung ist <literal>30</literal>
      Sekunden. Wird PHP von der
      <link linkend="features.commandline">Kommandozeile</link> ausgeführt, so
      ist der Standardwert <literal>0</literal>.
     </para>
     <para>
      Auf Nicht-Windows-Systemen beeinhaltet die maximale Ausführungszeit
      keine Systemaufrufe, Streamoperationen usw. Weitere Details finden Sie
      bei der Funktion <function>set_time_limit</function>.
     </para>
     <para>
      Ihr Webbserver kann andere Timeout-Einstellungen haben, die ebenfalls
      die PHP-Ausführung unterbrechen können. Apache hat eine
      <literal>TimeOut</literal>-Direktive und IIS hat eine
      CGI-Timeout-Funktion. Beide sind als Standardwert auf 300 Sekunden
      eingestellt. Genauere Informationen finden Sie in der Dokumentation
      Ihres Webservers.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Legt die maximale Zeit in Sekunden fest, die ein Skript verbrauchen
      darf, um Eingabedaten wie POST, GET und Dateiuploads zu verarbeiten. Die
      Zeitmessung beginnt, sobald PHP auf dem Server aufgerufen wird, und
      endet, wenn die Ausführung beginnt. Der Standardwert ist
      <literal>-1</literal>, was bedeutet, dass stattdessen
      <link linkend="ini.max-execution-time">max_execution_time</link>
      verwendet wird. Der Wert <literal>0</literal> bedeutet kein Zeitlimit.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Legt die maximale Verschachtelungtiefe für
      <link linkend="language.variables.external">Eingabevariablen</link>
      (&zb; <varname>$_GET</varname>, <varname>$_POST</varname>) fest.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Wie viele
      <link linkend="language.variables.external">Eingabe-Variablen</link>
      maximal angenommen werden (dieses Limit wird auf die superglobalen
      $_GET, $_POST und $_COOKIE separat angewandt). Die Verwendung dieser
      Einstellung verringert die Möglichkeit von Denial-of-Service-Angriffen,
      die Hash-Kollisionen nutzen. Wenn mehr Eingabe-Variablen gesendet
      werden, als mit dieser Einstellung erlaubt ist, wird ein Fehler der
      Stufe <constant>E_WARNING</constant> ausgelöst und weitere
      Eingabe-Variablen werden nicht angenommen.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Aktiviert bzw. deaktiviert die Speicherbereinigung zirkulär abhängiger
      Referenzen.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.max-allowed-stack-size">
    <term>
     <parameter>zend.max_allowed_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Der maximale native Stack-Speicherplatz, die das Betriebssystem dem
      Programm zugesteht.
      Der Versuch, mehr zu verbrauchen, führt typischerweise zu einem harten
      Absturz ohne leicht verfügbare Debugging-Informationen.
      Um die Fehlersuche zu erleichtern, löst die Engine einen
      <classname>Error</classname> aus, bevor es zu dem Absturz kommt (wenn das
      Programm mehr als
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>-<link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link>
      Bytes des Stacks verwendet).
     </para>
     <para>
      Rekursive Aufrufe im benutzerdefinierten Code verbrauchen keinen nativen
      Stack-Speicher.
      Bei internen Funktionen und magischen Methoden ist dies jedoch der Fall.
      Eine sehr tiefe Rekursion, die diese Funktionen einbezieht, kann dazu
      führen, dass der gesamte verfügbare native Stack-Speicher aufgebraucht
      wird.
     </para>
     <para>
      Mögliche Werte für diesen Parameter sind:
      <simplelist>
       <member>
        <literal>0</literal>:
        Automatische Erkennung des maximalen nativen Stack-Speicherplatzes, den
        das Betriebssystem für das Programm zulässt.
        Dies ist die Standardeinstellung.
        Wenn die Erkennung nicht möglich ist, wird eine bekannte Systemvorgabe
        verwendet.
       </member>
       <member>
        <literal>-1</literal>: Deaktiviert die Überprüfung der Größe des Stacks
        in der Engine.
       </member>
       <member>
        Positive Ganzzahl: Eine feste Größe, in Bytes.
        Wird dieser Wert zu hoch eingestellt, hat dies den gleichen Effekt wie
        die Deaktivierung der Überprüfung der Stackgröße.
       </member>
      </simplelist>
     </para>
     <para>
      Da die Größe des Stacks von
      <link linkend="language.fibers">Fibers</link>
      durch
      <link linkend="ini.fiber.stack-size">fiber.stack_size</link>
      bestimmt wird, wird der Wert dieses Parameters anstelle von
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>
      verwendet, wenn die Stack-Nutzung während der Ausführung einer Fiber
      überprüft wird.
     </para>
     <note>
      <para>
       Dies hat nichts mit Stack-<emphasis>Puffer</emphasis>überläufen zu tun
       und stellt kein Sicherheitsfeature dar.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.reserved-stack-size">
    <term>
     <parameter>zend.reserved_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die reservierte Größe des Stacks, in Bytes.
      Diese wird als Puffer von der
      <link linkend="ini.zend.max-allowed-stack-size">maximal erlaubten Größe des Stacks</link>
      subtrahiert, wenn die Größe des Stacks überprüft wird.
     </para>
     <para>
      Mögliche Werte für diesen Parameter sind:
      <simplelist>
       <member>
        Automatische Erkennung einer sinnvollen Größe.
       </member>
       <member>
        Positive Ganzzahl: Eine feste Größe, in Bytes.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.fiber.stack-size">
    <term>
     <parameter>fiber.stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die native Größe des Stacks, die für jede
      <link linkend="language.fibers">Fiber</link> zugewiesen wird, in Bytes.
     </para>
     <para>
      Bei Systemen mit einer Zeigergröße von weniger als 8 Byte beträgt der
      Standardwert 1MiB, ansonsten 2MiB.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
